{"version":3,"sources":["app/common/servises/notify.server.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAG3C,wBAA2B,cAAc,CAAC,CAAA;AAG1C;IASI;QAJA,4BAA4B;QACpB,sBAAiB,GAAG,IAAI,iBAAO,EAAM,CAAC;QACtC,mBAAc,GAAG,IAAI,iBAAO,EAAM,CAAC;QAGvC,4BAA4B;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC/D,CAAC;IAED,2BAA2B;IACpB,mCAAW,GAAlB;QACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,uCAAe,GAAtB,UAAuB,SAAc;QACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;IAvBL;QAAC,iBAAU,EAAE;;qBAAA;IAyBb,oBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,qBAAa,gBAwBzB,CAAA","file":"app/common/servises/notify.server.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject }    from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class NotifyService {\r\n\r\n    public refreshAnnonced: Observable<{}>;\r\n    public selectedAnnonced: Observable<{}>;\r\n\r\n    // Observable string sources\r\n    private refreshInfoSource = new Subject<{}>();\r\n    private selectedSource = new Subject<{}>();\r\n\r\n    constructor() {\r\n        // Observable string streams\r\n        this.refreshAnnonced = this.refreshInfoSource.asObservable();\r\n        this.selectedAnnonced = this.selectedSource.asObservable();\r\n    }\r\n\r\n    // Service message commands\r\n    public refreshData() {\r\n        this.refreshInfoSource.next('');\r\n    }\r\n\r\n    public selectedRailcar(_selected: any) {\r\n        this.selectedSource.next(_selected);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
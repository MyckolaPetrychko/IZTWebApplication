{"version":3,"sources":["app/common/pipes/data-filter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAQ9D;IAAA;IAqBA,CAAC;IApBG;;;;;;;;OAQG;IACH,kCAAS,GAAT,UAAU,KAAmB,EAAE,KAAa,EAAE,IAAmB,EAAE,IAAc;QAAnC,oBAAmB,GAAnB,WAAmB;QAC7D,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAI,QAAQ,SAAc,CAAC;YAC3B,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,IAAgB;gBACrC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAzBL;QAAC,WAAI,CAAC;YACF,IAAI,EAAE,YAAY;SACrB,CAAC;QAED,iBAAU,EAAE;;sBAAA;IAsBb,qBAAC;AAAD,CArBA,AAqBC,IAAA;AArBY,sBAAc,iBAqB1B,CAAA","file":"app/common/pipes/data-filter.pipe.js","sourcesContent":["import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\nimport { IDataModel } from '../../filters-data/data.model';\r\n@Pipe({\r\n    name: 'dataFilter'\r\n})\r\n\r\n@Injectable()\r\nexport class DataFilterPipe implements PipeTransform {\r\n    /**\r\n     * Pipes for filter data for property and value\r\n     * @example \" items | dataFilter :value :property \"\r\n     * @param {IDataModel[]} items List of data\r\n     * @param {string} value    Value for filter\r\n     * @param {string} prop = 'id'     Property name for filtering. Default id\r\n     * @param {string[]} args   Other values\r\n     * @returns {IDataModel[]}  data filtered\r\n     */\r\n    transform(items: IDataModel[], value: string, prop: string = 'id', args: string[]): IDataModel[] {\r\n        if (value) {\r\n            let returned: IDataModel[];\r\n            returned = items.filter((item: IDataModel): boolean => {\r\n                return (('' + item[prop]).indexOf(value) !== -1);\r\n            }); \r\n            return returned;\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
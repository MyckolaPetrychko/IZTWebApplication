{"version":3,"sources":["app/railcars/routed-child/railcar-disparity/railcar-disparity.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;AAEH,qBAA6E,eAAe,CAAC,CAAA;AAE7F,qBAA0B,kBAAkB,CAAC,CAAA;AAI7C,8BAAiE,eAAe,CAAC,CAAA;AACjF,uBAAyB,iBAAiB,CAAC,CAAA;AAC3C,iCAA+B,wBAAwB,CAAC,CAAA;AAGxD,gCAA+B,uCAAuC,CAAC,CAAA;AAEvE;;;;;;;;GAQG;AAQH;IAwEI;;;;;OAKG;IACH,mCAAoB,UAA0B,EAC1B,UAA4B;QAD5B,eAAU,GAAV,UAAU,CAAgB;QAC1B,eAAU,GAAV,UAAU,CAAkB;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,iBAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,4CAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAsB;YAC/E,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,+CAAW,GAAX;QACI,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;IAED;;;;;;OAMG;IACH,+CAAW,GAAX,UAAY,OAEX;QACG,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAC5C,CAAC;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAED;;;;OAIG;IACiB,uCAAG,GAAH,UAAI,IAAY;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED;;OAEG;IACI,+CAAW,GAAlB;QAAA,iBA4BC;QA3BG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;iBAC3D,SAAS,CAAC,UAAA,GAAG;gBACV,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;gBACzB,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC;oBAC7B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;gBACvB,CAAC;YACL,CAAC,EACD,UAAA,GAAG;gBACC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QAEX,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;QACxC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACK,uDAAmB,GAA3B,UAA4B,MAAW;QACnC,IAAI,SAAS,GAAW,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YACxD,SAAS,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAGD;;;;OAIG;IACK,mDAAe,GAAvB;QAAA,iBA8DC;QA7DG,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,4BAA4B;gBACxC,KAAK,EAAE,sBAAsB;gBAC7B,SAAS,EAAE,iBAAiB;gBAC5B,KAAK,EAAE,GAAG;gBACV,cAAc,EAAE,GAAG;aACtB;YACD;gBACI,UAAU,EAAE,qBAAqB;gBACjC,KAAK,EAAE,eAAe;gBACtB,SAAS,EAAE,mBAAmB;gBAC9B,KAAK,EAAE,GAAG;gBACV,YAAY,EAAE,UAAC,MAAW;oBACtB,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;gBACtE,CAAC;gBACD,cAAc,EAAE,GAAG;aACtB;YACD;gBACI,UAAU,EAAE,kBAAkB;gBAE9B,cAAc,EAAE,GAAG;gBACnB,QAAQ,EAAE;oBACN;wBACI,UAAU,EAAE,sBAAsB;wBAClC,KAAK,EAAE,gBAAgB;wBACvB,SAAS,EAAE,mBAAmB;wBAC9B,KAAK,EAAE,GAAG;wBACV,YAAY,EAAE,UAAC,MAAW;4BACtB,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;wBACtE,CAAC;qBACJ;oBACD;wBACI,UAAU,EAAE,0BAA0B;wBACtC,KAAK,EAAE,oBAAoB;wBAC3B,SAAS,EAAE,iBAAiB;wBAC5B,KAAK,EAAE,GAAG;qBACb,CAAC;aACT;YACD;gBACI,UAAU,EAAE,oBAAoB;gBAChC,cAAc,EAAE,GAAG;gBACnB,QAAQ,EAAE;oBACN;wBACI,UAAU,EAAE,wBAAwB;wBACpC,KAAK,EAAE,kBAAkB;wBACzB,SAAS,EAAE,mBAAmB;wBAC9B,KAAK,EAAE,GAAG;wBACV,YAAY,EAAE,UAAC,MAAW;4BACtB,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;wBACtE,CAAC;qBACJ;oBACD;wBACI,UAAU,EAAE,4BAA4B;wBACxC,KAAK,EAAE,sBAAsB;wBAC7B,SAAS,EAAE,iBAAiB;wBAC5B,KAAK,EAAE,GAAG;qBACb,CAAC;aACT;SAEJ,CAAC;IACN,CAAC;IAED;;;;OAIG;IACK,qDAAiB,GAAzB;QAAA,iBA+BC;QA9BG,IAAI,CAAC,WAAW,GAAG;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,aAAa;YAC3B,YAAY,EAAE,QAAQ;YACtB,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,UAAC,MAAW;gBAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;gBACvE;oBACI,IAAI,SAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,IAAI,GAAG,SAAO,CAAC,WAAW,CAAC;oBAC/B,IAAI,GAAG,GAAG,IAAI,CAAC;oBACf,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;wBACpC,SAAO,CAAC,SAAS,GAAG,EAAE,CAAC;wBACvB,SAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;oBAEtD,CAAC,CAAC,CAAC;;gBARP,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;;iBASvC;gBACD,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC;YACD,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;YACb,WAAW,EAAE;gBACT,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAC5C,CAAC;YACD,QAAQ,EAAE,KAAK;YACf,wBAAwB,EAAE,IAAI;YAC9B,sBAAsB,EAAE,IAAI;YAC5B,sBAAsB,EAAE,IAAI;YAC5B,qBAAqB,EAAE,IAAI;SAC9B,CAAC;IACN,CAAC;IA9JD;QAAC,YAAK,CAAC,WAAW,CAAC;;;;wDAAA;IA3IvB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,oCAAoC;YACjD,UAAU,EAAE,CAAC,gBAAS,EAAE,gCAAc,CAAC;YACvC,KAAK,EAAE,CAAC,6BAAa,CAAC;SACzB,CAAC;;iCAAA;IAoSF,gCAAC;AAAD,CAnSA,AAmSC,IAAA;AAnSY,iCAAyB,4BAmSrC,CAAA","file":"app/railcars/routed-child/railcar-disparity/railcar-disparity.component.js","sourcesContent":["/**\r\n * @author Maryna Usatiuk \r\n * @email maryna.duda@innovinnprom.com\r\n * @date 05.08.2016 09:50:59\r\n */\r\n\r\nimport { Component, OnInit, OnDestroy, Input, OnChanges, SimpleChange } from '@angular/core';\r\n\r\nimport { AgGridNg2 } from 'ag-grid-ng2/main';\r\nimport { GridOptions, ColumnApi } from 'ag-grid/main';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslatePipe, TranslateService, LangChangeEvent } from 'ng2-translate';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RailcarService } from '../../railcars.service';\r\n\r\nimport { IRailcarDisparityModel } from './railcar-disparity.model';\r\nimport { AlertComponent } from '../../../shared/alert/alert.component';\r\n\r\n/**\r\n * Component for disparitys for selected railcar\r\n * \r\n * @export\r\n * @class RailcarDisparityComponent\r\n * @implements {OnInit}\r\n * @implements {OnDestroy}\r\n * @implements {OnChanges}\r\n */\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-railcar-disparity',\r\n    templateUrl: './railcar-disparity.component.html',\r\n    directives: [AgGridNg2, AlertComponent],\r\n    pipes: [TranslatePipe]\r\n})\r\nexport class RailcarDisparityComponent implements OnInit, OnDestroy, OnChanges {\r\n   \r\n    /**\r\n     * List of disparity for current railcar\r\n     * \r\n     * @type {IRailcarDisparityModel[]}\r\n     */\r\n    public DisparityList: IRailcarDisparityModel[];\r\n    \r\n    /**\r\n     * Current railcar id\r\n     * \r\n     * @type {number}\r\n     */\r\n    public railcarNumber: number;\r\n    \r\n    /**\r\n     * Check is disparity exist\r\n     * \r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    private isNotNull: boolean;\r\n   \r\n    /**\r\n     * Alert message \r\n     * \r\n     * @private\r\n     * @type {string}\r\n     */\r\n    private message: string;\r\n   \r\n    /**\r\n     * Type alert message\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     */\r\n    private type: string;\r\n\r\n    /**\r\n     * Definitions of colunms for Ag2-Grid\r\n     * \r\n     * @private\r\n     * @type {*}\r\n     */\r\n    private columnDefs: any;\r\n   \r\n    /**\r\n     * Gridoptions for Ag2-Grid\r\n     * \r\n     * @private\r\n     * @type {GridOptions}\r\n     */\r\n    private gridOptions: GridOptions;\r\n\r\n    /**\r\n     * subscription for change translate\r\n     * \r\n     * @private\r\n     * @type {Subscription}\r\n     */\r\n    private _subTranslate: Subscription;\r\n\r\n    /**\r\n     * Date pipe for render cell\r\n     * \r\n     * @private\r\n     * @type {DatePipe}\r\n     */\r\n    private _datePipe: DatePipe;\r\n\r\n    /**\r\n     * Creates an instance of RailcarDisparityComponent.\r\n     * \r\n     * @param {RailcarService} _disparity - servise to get for https disparitys\r\n     * @param {TranslateService} _translate - translate servise\r\n     */\r\n    constructor(private _disparity: RailcarService,\r\n                private _translate: TranslateService) {\r\n        this._datePipe = new DatePipe();\r\n        this.isNotNull = false;\r\n\r\n        this.message = 'TABLE.LOADING';\r\n        this.DisparityList = [];\r\n    }\r\n\r\n    /**\r\n     * Initial data\r\n     * \r\n     */\r\n    ngOnInit() {\r\n        this.createColunmDef();\r\n        this.createGridOptions();\r\n\r\n        this._subTranslate = this._translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            if (this.gridOptions && this.gridOptions.api) { this.gridOptions.api.refreshHeader(); }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Destroy data\r\n     * \r\n     */\r\n    ngOnDestroy() {\r\n        this._subTranslate.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Check schanges of railcarId\r\n     * \r\n     * @param {{\r\n     *         [propName: string]: SimpleChange\r\n     *     }} changes\r\n     */\r\n    ngOnChanges(changes: {\r\n        [propName: string]: SimpleChange\r\n    }) {\r\n        for (let propName in changes) {\r\n            this.railcarNumber = changes[propName].currentValue;\r\n            if (this.gridOptions && this.gridOptions.api) {\r\n                this.gridOptions.api.sizeColumnsToFit();\r\n            }\r\n            this.refreshData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set railcarNumber as railcarId \r\n     * \r\n     * @param {number} _val\r\n     */\r\n    @Input('railcarId') set(_val: number) {\r\n        this.railcarNumber = _val;\r\n    }\r\n\r\n    /**\r\n     * Check if exist railcarNumber and get data\r\n     */\r\n    public refreshData(): void {\r\n        this.isNotNull = false;\r\n        this.message = 'TABLE.LOADING';\r\n        this.type = 'info';\r\n        if (this.railcarNumber !== null && this.railcarNumber !== undefined) {\r\n            this._disparity.getRailcarDisparityList('' + this.railcarNumber)\r\n                .subscribe(res => {\r\n                    this.DisparityList = res;\r\n                    if (this.DisparityList.length > 0) {\r\n                        this.isNotNull = true;\r\n                    } else {\r\n                        this.isNotNull = false;\r\n                        this.message = 'TABLE.EMPTY';\r\n                        this.type = 'info';\r\n                    }\r\n                },\r\n                err => {\r\n                    this.DisparityList = [];\r\n                    this.isNotNull = false;\r\n                    this.type = 'error';\r\n                    this.message = 'Error:' + JSON.stringify(err);\r\n                });\r\n\r\n        } else {\r\n            this.isNotNull = false;\r\n            this.type = 'info';\r\n            this.message = 'ERROR.NOT_SELECTED';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate params.headerName  from Ag-Grid\r\n     * \r\n     * @private\r\n     * @param {*} params\r\n     * @returns {string}\r\n     */\r\n    private translateHeaderName(params: any): string {\r\n        let translate: string = params.colDef.headerName;\r\n        this._translate.get(params.colDef.headerName).subscribe((val) => {\r\n            translate = val;\r\n        });\r\n        return translate;\r\n    }\r\n\r\n\r\n    /**\r\n     * Create column definitions\r\n     * \r\n     * @private\r\n     */\r\n    private createColunmDef(): void {\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'TABLE.deviationdescription',\r\n                field: 'deviationdescription',\r\n                cellClass: 'table-cell-left',\r\n                width: 300,\r\n                layoutInterval: 500\r\n            },\r\n            {\r\n                headerName: 'TABLE.deviationtime',\r\n                field: 'deviationtime',\r\n                cellClass: 'table-cell-center',\r\n                width: 200,\r\n                cellRenderer: (params: any) => {\r\n                    return this._datePipe.transform(params.value, 'dd.MM.yyyy HH:mm');\r\n                },\r\n                layoutInterval: 500\r\n            },\r\n            {\r\n                headerName: 'TABLE.permission',\r\n                \r\n                layoutInterval: 500,\r\n                children: [\r\n                    {\r\n                        headerName: 'TABLE.permissiontime',\r\n                        field: 'permissiontime',\r\n                        cellClass: 'table-cell-center',\r\n                        width: 150,\r\n                        cellRenderer: (params: any) => {\r\n                            return this._datePipe.transform(params.value, 'dd.MM.yyyy HH:mm');\r\n                        },\r\n                    },\r\n                    {\r\n                        headerName: 'TABLE.permissionusername',\r\n                        field: 'permissionusername',\r\n                        cellClass: 'table-cell-left',\r\n                        width: 200\r\n                    }]\r\n            },\r\n            {\r\n                headerName: 'TABLE.confirmation',\r\n                layoutInterval: 500,\r\n                children: [\r\n                    {\r\n                        headerName: 'TABLE.confirmationtime',\r\n                        field: 'confirmationtime',\r\n                        cellClass: 'table-cell-center',\r\n                        width: 150,\r\n                        cellRenderer: (params: any) => {\r\n                            return this._datePipe.transform(params.value, 'dd.MM.yyyy HH:mm');\r\n                        },\r\n                    },\r\n                    {\r\n                        headerName: 'TABLE.confirmationusername',\r\n                        field: 'confirmationusername',\r\n                        cellClass: 'table-cell-left',\r\n                        width: 200\r\n                    }]\r\n            }\r\n\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Creade gridoptions for ag-grid\r\n     * \r\n     * @private\r\n     */\r\n    private createGridOptions(): void {\r\n        this.gridOptions = {\r\n            columnDefs: this.columnDefs,\r\n            rowData: this.DisparityList,\r\n            rowSelection: 'single',\r\n            enableColResize: true,\r\n            headerCellRenderer: (params: any) => {\r\n                let txtGroup = document.getElementsByClassName('ag-header-group-text');\r\n                for (let i = 0; i < txtGroup.length; i++) {\r\n                    let element = txtGroup.item(i);\r\n                    let text = element.textContent;\r\n                    let txt = text;\r\n                    this._translate.get(text).subscribe((val) => {\r\n                        element.innerHTML = '';\r\n                        element.appendChild(document.createTextNode(val));\r\n\r\n                    });\r\n                }\r\n                return this.translateHeaderName(params);\r\n            },\r\n            headerHeight: 30,\r\n            rowHeight: 20,\r\n            onGridReady: () => {\r\n                this.gridOptions.api.sizeColumnsToFit();\r\n            },\r\n            forPrint: false,\r\n            suppressHorizontalScroll: true,\r\n            suppressMovableColumns: true,\r\n            suppressLoadingOverlay: true,\r\n            suppressNoRowsOverlay: true\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
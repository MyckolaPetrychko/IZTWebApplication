{"version":3,"sources":["app/railcars/routed-child/railcar-view/view.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwD,eAAe,CAAC,CAAA;AAExE,gCAAoC,0CAA0C,CAAC,CAAA;AAC/E,2BAA+B,cAAc,CAAC,CAAA;AAC9C,8BAA+B,eAAe,CAAC,CAAA;AAC/C,gCAA+B,uCAAuC,CAAC,CAAA;AASvE;IAUI,mCAAoB,QAA6B;QAA7B,aAAQ,GAAR,QAAQ,CAAqB;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,2BAAc,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAkBC;QAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAA;QACvD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QACnD,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,IAAI,GAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,CAAC;YACjB,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kDAAc,GAArB,UAAuB,KAAc;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEM,0CAAM,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IAzDJ;QAAC,gBAAS,CAAC;YACR,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sBAAsB;YAChC,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,6BAAa,CAAC;YACtB,UAAU,EAAE,CAAC,gCAAc,CAAC;SAC/B,CAAC;;iCAAA;IAqDF,gCAAC;AAAD,CApDA,AAoDC,IAAA;AApDY,iCAAyB,4BAoDrC,CAAA","file":"app/railcars/routed-child/railcar-view/view.component.js","sourcesContent":["import { Component, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute} from '@angular/router';\r\nimport { LocalStorageService } from '../../../common/servises/storage.service';\r\nimport { VisibilityConf } from './view.model';\r\nimport {  TranslatePipe } from 'ng2-translate';\r\nimport { AlertComponent } from '../../../shared/alert/alert.component';\r\n\r\n @Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-visibility-conf',\r\n    templateUrl: './view.component.html',\r\n    pipes: [TranslatePipe],\r\n    directives: [AlertComponent] \r\n})\r\nexport class VisibilityConfigComponent implements OnInit {\r\n    public propertiesBase: string[];\r\n    public propertiesColsPart1: string[];\r\n    public propertiesColsPart2: string[];\r\n\r\n\r\n    public cols: VisibilityConf;\r\n    public isPrintType: boolean;\r\n\r\n\r\n    constructor(private _storage: LocalStorageService) {\r\n        this.cols = new VisibilityConf();\r\n        this.propertiesBase = [];\r\n        this.propertiesColsPart1 = [];\r\n        this.propertiesColsPart2 = [];\r\n\r\n        this.isPrintType = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.isPrintType) {\r\n            this.cols = this._storage.getViewPrintFromStorage()\r\n        } else {\r\n            this.cols = this._storage.getViewFromStorage();\r\n        }\r\n\r\n        this.propertiesBase = Object.keys(this.cols);\r\n        this.propertiesBase.pop();\r\n        let prop: string[] = Object.keys(this.cols.cols);\r\n        let half: number = Math.floor(prop.length / 2);\r\n        prop.forEach((item, i): void => {\r\n            if (i <= half) {\r\n                this.propertiesColsPart1.push(item);\r\n            } else {\r\n                this.propertiesColsPart2.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    public changeProperty( _prop : string):void {\r\n        this.cols[_prop] = !this.cols[_prop];\r\n        this.onSave();\r\n    }\r\n\r\n    public onSave(): void {\r\n        if (this.isPrintType) {\r\n            this._storage.saveViewPrintToStorage(this.cols)\r\n        } else {\r\n            this._storage.saveViewToStorage(this.cols);\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
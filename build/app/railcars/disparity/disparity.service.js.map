{"version":3,"sources":["app/railcars/disparity/disparity.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;AAEH,UAAU;AACV,qBAGO,eAAe,CAAC,CAAA;AACvB,qBAKO,eAAe,CAAC,CAAA;AAGvB,YAAY;AACZ,QAAO,2BAA2B,CAAC,CAAA;AACnC,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,sBAAsB,CAAC,CAAA;AAG9B,uCAA4B,8CAA8C,CAAC,CAAA;AAK3E,mCAGO,sBAAsB,CAAC,CAAA;AAE9B;;;;;GAKG;AAEH;IACI,yBAAyB;IAEzB,0BAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAE/B,CAAC;IAED,6DAA6D;IAC7D,kDAAuB,GAAvB;QACM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4CAAuB,CAAC;aAC3C,GAAG,CAAC,UAAA,GAAG,IAAI,OAAmB,GAAG,CAAC,IAAI,EAAE,EAA7B,CAA6B,CAAC;aACzC,EAAE,CAAC,UAAA,IAAI;YACJ,cAAc;YACd,OAAO,CAAC,KAAK,CAAC,0BAA0B;gBACpC,4CAAuB;gBACvB,WAAW;gBACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC;aACD,KAAK,CAAC,oCAAW,CAAC,CAAC;IAC5B,CAAC;IAEF,uBAAuB;IACtB,oDAAoD;IACpD,2FAA2F;IAC3F,uDAA4B,GAA5B,UAA6B,SAAiB,EAC1C,WAAmB;QAEnB,IAAI,4BAA4B,GAAG,uCAAkB;aAChD,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC;aACjC,OAAO,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QAG3C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4BAA4B,CAAC;aAC9C,GAAG,CAAC,UAAA,GAAG,IAAI,OAAiB,GAAG,CAAC,IAAI,EAAE,EAA3B,CAA2B,CAAC;aACvC,EAAE,CAAC,UAAA,IAAI;YACJ,cAAc;YACd,OAAO,CAAC,KAAK,CAAC,4BAA4B;gBACtC,4BAA4B;gBAC5B,WAAW;gBACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,oCAAW,CAAC,CAAC;IAC5B,CAAC;IA3CL;QAAC,iBAAU,EAAE;;wBAAA;IAsEb,uBAAC;AAAD,CArEA,AAqEC,IAAA;AArEY,wBAAgB,mBAqE5B,CAAA","file":"app/railcars/disparity/disparity.service.js","sourcesContent":["/**\r\n * @author Maryna Duda \r\n * @email maryna.duda@innovinnprom.com\r\n * @date   22/06/2016 09:20\r\n */\r\n\r\n// Angular\r\nimport {\r\n    Injectable,\r\n    Optional\r\n} from '@angular/core';\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions\r\n} from '@angular/http';\r\n\r\nimport {  Observable } from 'rxjs/Observable';\r\n// Operators\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\n\r\n\r\nimport { handleError } from '../../shared/variable/error-handler.function';\r\n// Application\r\nimport {\r\n    IDisparityModel\r\n} from './disparity.model';\r\nimport {\r\n    DisparityListCurrentApi,\r\n    DisparityAcceptApi\r\n} from './disparity.constant';\r\n\r\n/**\r\n * Service to work with disparitys \r\n * \r\n * @export\r\n * @class DisparityService\r\n */\r\n@Injectable()\r\nexport class DisparityService {\r\n    // private _role: string;\r\n\r\n    constructor(private _http: Http) {\r\n\r\n    }\r\n\r\n    // getDisparityListCurrent(): Observable<IDisparityModel[]> {\r\n    getDisparityListCurrent(): Observable<any> {\r\n          return this._http.get(DisparityListCurrentApi)\r\n            .map(res => <IDisparityModel[]>res.json())\r\n            .do(data => {\r\n                // TODO: debug\r\n                console.debug('Disparity List Current: ' +\r\n                    DisparityListCurrentApi +\r\n                    '\\n Data: ' +\r\n                    JSON.stringify(data.length));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n   // TODO: debug only get\r\n    //   setDisparityRailcarAcceptApi(railcarID: string,\r\n    //                                disparityID: string): Observable<IDisparityAcceptModel> {\r\n    setDisparityRailcarAcceptApi(railcarID: string,\r\n        disparityID: string): Observable<any> {\r\n\r\n        let urlDisparityRailcarAcceptApi = DisparityAcceptApi\r\n            .replace('%railcarId%', railcarID)\r\n            .replace('%disparityId%', disparityID);\r\n\r\n\r\n        return this._http.get(urlDisparityRailcarAcceptApi)\r\n            .map(res => <IDisparityModel>res.json())\r\n            .do(data => {\r\n                // TODO: debug\r\n                console.debug('Disparity Railcar Accept: ' +\r\n                    urlDisparityRailcarAcceptApi +\r\n                    '\\n Data: ' +\r\n                    JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n    /*   \r\n     // PUT \r\n     setDisparityRailcarAcceptApi(railcarID: string, disparityID: string): Observable<IDisparityModel> {\r\n         if (this._role === 'anonym') { return;}\r\n \r\n         let disparityRailcarAcceptApi = DisparityRailcarAcceptApi\r\n             .replace('%railcarId%', railcarID)\r\n             .replace('%disparityId%', disparityID);\r\n \r\n         let body = JSON.stringify(disparityID);\r\n         let headers = new Headers({ 'Content-Type': 'application/json' });\r\n         let options = new RequestOptions({ headers: headers });\r\n \r\n         return this._http.put(disparityRailcarAcceptApi, body, options)\r\n             .map(res => <IDisparityModel>res.json().data)\r\n             .do(data => {\r\n                 // TODO: debug\r\n                 console.debug('Disparity Railcar Accept: ' +\r\n                     DisparityRailcarAcceptApi +\r\n                     '\\n Data: ' +\r\n                     JSON.stringify(data));\r\n             })\r\n             .catch(this.handleError);\r\n     }\r\n */\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
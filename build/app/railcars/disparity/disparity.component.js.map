{"version":3,"sources":["app/railcars/disparity/disparity.component.ts"],"names":[],"mappings":"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","file":"app/railcars/disparity/disparity.component.js","sourcesContent":["// TODO:FIX permissiontime or confirmtime??? as label of type disparity (deviations)\r\n\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { GridOptions } from 'ag-grid/main';\r\nimport {\r\n    TranslateService,\r\n    LangChangeEvent\r\n} from 'ng2-translate/ng2-translate';\r\n\r\nimport { DisparityService } from './disparity.service';\r\nimport { RefreshService } from '../common/services/refresh.service';\r\n\r\nimport { IDisparityModel } from './disparity.model';\r\nimport { UserService } from '../../shared/auth/user.service';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-disparity-list',\r\n    templateUrl: 'disparity.component.html',\r\n})\r\n\r\nexport class DisparityListComponent implements OnInit, OnDestroy {\r\n    public DisparityList: IDisparityModel[];\r\n    public total: number;\r\n    public accepted: number;\r\n    public isHidden: boolean;\r\n    public selected: IDisparityModel;\r\n    public isSelected: boolean;\r\n\r\n    private isTraider: boolean;\r\n    private isEmployyer: boolean;\r\n\r\n    private modal: boolean;\r\n    private isNotNull: boolean;\r\n    private message: string;\r\n    private type: string;\r\n\r\n    private columnDefs: any;\r\n    private gridOptions: GridOptions;\r\n\r\n    private _subRefresh: Subscription;\r\n    private _subTranslate: Subscription;\r\n\r\n    private _datePipe: DatePipe;\r\n\r\n    constructor(private _disparity: DisparityService,\r\n        private _refresh: RefreshService,\r\n        private _auth: UserService,\r\n        private _translate: TranslateService) {\r\n        this.DisparityList = [];\r\n        this.selected = <IDisparityModel>{};\r\n        this.total = 0;\r\n        this.accepted = 0;\r\n\r\n        this._datePipe = new DatePipe();\r\n        this.isNotNull = false;\r\n        this.isHidden = false;\r\n        this.modal = false;\r\n        this.message = 'TABLE.EMPTY';\r\n        this.type = 'info';\r\n        this.isSelected = false;\r\n        this.isTraider = false;\r\n        this.isEmployyer = false;\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.refreshData();\r\n        this.createColunmDef();\r\n        this.createGridOptions();\r\n\r\n        this._subTranslate = this._translate.onLangChange\r\n            .debounceTime(1000)\r\n            .subscribe((event: LangChangeEvent) => {\r\n                if (this.gridOptions && this.gridOptions.api) {\r\n                    this.gridOptions.api.refreshHeader();\r\n                }\r\n            });\r\n\r\n        this._subRefresh = this._refresh.refreshAnnonced.subscribe(() => {\r\n            this.refreshData();\r\n        });\r\n\r\n        this.isEmployyer = this._auth.isAuth('employee');\r\n        this.isTraider = this._auth.isAuth('trader');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._subRefresh.unsubscribe();\r\n        this._subTranslate.unsubscribe();\r\n    }\r\n\r\n    public refreshData(): void {\r\n        this.isNotNull = false;\r\n        this.message = 'MESSAGE.LOADING';\r\n        this.type = 'info';\r\n        this._disparity\r\n            .getDisparityListCurrent()\r\n            .subscribe(res => {\r\n                this.DisparityList = res;\r\n                this.total = this.DisparityList.length;\r\n                this.accepted = 0;\r\n                if (this.total > 0) {\r\n                    this.isNotNull = true;\r\n                    this.DisparityList.forEach(item => {\r\n                        if (item.permissiontime === null) {\r\n                            this.accepted++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.isNotNull = false;\r\n                    this.message = 'MESSAGE.EMPTY_TABLE';\r\n                    this.type = 'info';\r\n                }\r\n            },\r\n            err => {\r\n                this.DisparityList = [];\r\n                this.isNotNull = false;\r\n                this.accepted = null;\r\n                this.total = null;\r\n                this.type = 'error';\r\n                this.message = 'Error:' + JSON.stringify(err);\r\n            });\r\n    }\r\n\r\n    public show(): void {\r\n        this.isHidden = !this.isHidden;\r\n    }\r\n\r\n    public accept(): void {\r\n        let railcarID: number = 0;\r\n        let disparityID: number = 0;\r\n\r\n        this._disparity\r\n            .setDisparityRailcarAcceptApi(\r\n            '' + railcarID,\r\n            '' + disparityID\r\n            ).subscribe((_val) => {\r\n                this._refresh.refreshData();\r\n            }, (err: string) => {\r\n                this.DisparityList = [];\r\n                this.isNotNull = false;\r\n                this.accepted = null;\r\n                this.total = null;\r\n                this.type = 'error';\r\n                this.message = err;\r\n            });\r\n    }\r\n\r\n    private openModal(_val: boolean): void {\r\n        this.modal = _val;\r\n        console.log(_val);\r\n        if (_val === false) { \r\n                  this.selected = <IDisparityModel>{};\r\n                   this.gridOptions.api.deselectAll();\r\n                   this.isSelected = false;\r\n        }\r\n    }\r\n\r\n    private ok(): void {\r\n        console.log('accepnt');\r\n        this.accept();\r\n        this.openModal(false);\r\n    }\r\n\r\n    private cancel(): void {\r\n        this.openModal(false);\r\n    }\r\n\r\n    /**\r\n     * Translate params.headerName  from Ag-Grid\r\n     * \r\n     * @private\r\n     * @param {*} params\r\n     * @returns {string}\r\n     */\r\n    private translateHeaderName(params: any): string {\r\n        let translate: string = params.colDef.headerName;\r\n        this._translate.get(params.colDef.headerName).subscribe((val) => {\r\n            translate = val;\r\n        });\r\n        return translate;\r\n    }\r\n\r\n    private createColunmDef(): void {\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'TABLE.ownername',\r\n                field: 'ownername',\r\n                cellClass: 'table-cell-left',\r\n                width: 200,\r\n                layoutInterval: 600\r\n            },\r\n            {\r\n                headerName: 'TABLE.providername',\r\n                field: 'providername',\r\n                cellClass: 'table-cell-left',\r\n                width: 200,\r\n                layoutInterval: 600\r\n\r\n            },\r\n            {\r\n                headerName: 'TABLE.transportnumber',\r\n                field: 'transportnumber',\r\n                cellClass: 'table-cell-right',\r\n                width: 120,\r\n                layoutInterval: 600\r\n            },\r\n            {\r\n                headerName: 'TABLE.sampleroutdate',\r\n                field: 'sampleroutdate',\r\n                width: 120,\r\n                cellClass: 'table-cell-center',\r\n                cellRenderer: (params: any) => {\r\n                    return this._datePipe.transform(params.value, 'dd.MM.yyyy');\r\n                },\r\n                layoutInterval: 600\r\n            },\r\n            {\r\n                headerName: 'TABLE.stationname',\r\n                field: 'stationname',\r\n                width: 200,\r\n                cellClass: 'table-cell-left',\r\n                layoutInterval: 600\r\n            },\r\n            {\r\n                headerName: 'TABLE.cropfullname',\r\n                field: 'cropfullname',\r\n                cellClass: 'table-cell-left',\r\n                width: 180,\r\n                layoutInterval: 600\r\n\r\n            },\r\n            {\r\n                headerName: 'TABLE.deviationdescription',\r\n                field: 'deviationdescription',\r\n                cellClass: 'table-cell-left',\r\n                width: 300,\r\n                layoutInterval: 600\r\n            },\r\n            {\r\n                headerName: 'TABLE.deviationtime',\r\n                field: 'deviationtime',\r\n                cellClass: 'table-cell-center',\r\n                width: 200,\r\n                cellRenderer: (params: any) => {\r\n                    return this._datePipe.transform(params.value, 'dd.MM.yyyy HH:mm');\r\n                },\r\n                layoutInterval: 600\r\n            }\r\n        ];\r\n    }\r\n\r\n    private createGridOptions(): void {\r\n        this.gridOptions = {\r\n            columnDefs: this.columnDefs,\r\n            rowData: this.DisparityList,\r\n            rowSelection: 'single',\r\n            enableColResize: true,\r\n            headerCellRenderer: (params: any) => {\r\n                let txtGroup = document.getElementsByClassName('ag-header-group-text');\r\n                for (let i = 0; i < txtGroup.length; i++) {\r\n                    let element = txtGroup.item(i);\r\n                    let text = element.textContent;\r\n                    let txt = text;\r\n                    this._translate.get(text).subscribe((val) => {\r\n                        element.innerHTML = '';\r\n                        element.appendChild(document.createTextNode(val));\r\n\r\n                    });\r\n                }\r\n                return this.translateHeaderName(params);\r\n            },\r\n            getRowClass: (params: any) => {\r\n                return (params.node.data.permissiontime === null) ?\r\n                    'table-to-confirm-traider ' : 'table-to-confirm-employeer ';\r\n            },\r\n            headerHeight: 30,\r\n            rowHeight: 20,\r\n            onGridReady: () => {\r\n                this.gridOptions.api.sizeColumnsToFit();\r\n            },\r\n            onSelectionChanged: (): void => {\r\n                let _sel: Array<IDisparityModel> = this.gridOptions.api.getSelectedRows();\r\n                if ((_sel.length > 0) &&\r\n                    (this.selected) &&\r\n                    (this.selected.inventoryid === _sel[0].inventoryid)) {\r\n                    // this.selected = <IDisparityModel>{};\r\n                    // this.gridOptions.api.deselectAll();\r\n                                    this.openModal(true);\r\n\r\n                    // this.isSelected = false;\r\n                } else {\r\n                    this.selected = _sel[0];\r\n                    this.isSelected = true;\r\n                }\r\n            },\r\n            forPrint: false,\r\n            suppressHorizontalScroll: true,\r\n            suppressMovableColumns: true,\r\n            suppressLoadingOverlay: true,\r\n            suppressNoRowsOverlay: true\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
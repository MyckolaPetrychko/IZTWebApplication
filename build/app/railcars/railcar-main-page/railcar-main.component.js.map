{"version":3,"sources":["app/railcars/railcar-main-page/railcar-main.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,uBAA+D,iBAAiB,CAAC,CAAA;AAEjF,gCAA+B,oCAAoC,CAAC,CAAA;AACpE,uCAAqC,2CAA2C,CAAC,CAAA;AACjF,iCAA+B,mDAAmD,CAAC,CAAA;AACnF,6BAA4B,gCAAgC,CAAC,CAAA;AAS7D;IAQI,+BACY,QAAyB,EACzB,OAA6B,EAC7B,QAAyB,EACzB,KAAmB,EACnB,OAAgB;QAJhB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAsB;QAC7B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAS;IAE5B,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAOE;QANE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,GAAmB;YAC1E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACN,CAAC;IACD,2CAAW,GAAX;QACI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEM,0CAAU,GAAjB;QACI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAEO,+CAAe,GAAvB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACnE,CAAC;IACL,CAAC;IAEO,8CAAc,GAAtB;QACI,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,EAAC,UAAU,EAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAC,CAAA;QACnD,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IACtD,CAAC;IAEM,yCAAS,GAAjB,UAAkB,IAAa;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEO,kCAAE,GAAV;QACI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEO,sCAAM,GAAd;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IA/DL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,+BAA+B;SAC/C,CAAC;;6BAAA;IA4DF,4BAAC;AAAD,CA3DA,AA2DC,IAAA;AA3DY,6BAAqB,wBA2DjC,CAAA","file":"app/railcars/railcar-main-page/railcar-main.component.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router /*, ActivatedRoute */} from '@angular/router';\r\n\r\nimport { RefreshService } from '../common/services/refresh.service';\r\nimport { SelectRailcarService } from '../common/services/select-railcar.service';\r\nimport { RailcarService } from '../common/services/railcars-http/railcars.service';\r\nimport { UserService } from '../../shared/auth/user.service';\r\nimport { IRailcarModel } from '../railcars-subcomponents/railcar-list/railcars-list.model';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-railcars',\r\n    templateUrl: './railcar-main.component.html',\r\n})\r\nexport class RailcarsMainComponent implements OnInit, OnDestroy {\r\n\r\n    public selected: IRailcarModel;\r\n    public isSelected : boolean;\r\n    private _selectSub : Subscription;\r\n\r\n    private modal: boolean;\r\n    private isTrader : boolean;\r\n    constructor(\r\n        private _refresh : RefreshService,\r\n        private _select: SelectRailcarService,\r\n        private _railcar : RailcarService,\r\n        private _auth : UserService,\r\n        private _router : Router ) { \r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isTrader = this._auth.isAuth('trader');\r\n        this._selectSub = this._select.selectedAnnonced.subscribe((val : IRailcarModel) : void => {\r\n            console.log(val);\r\n            this.selected = val;\r\n            this.isSelected = (!!val);\r\n        });\r\n     }\r\n     ngOnDestroy() {\r\n         this._selectSub.unsubscribe();\r\n     }\r\n\r\n     public setRefresh(): void  {\r\n         this._refresh.refreshData();\r\n     }\r\n\r\n     private gotoEditRailcar():void {\r\n         if (this.isSelected) {\r\n            this._router.navigate(['/railcars', this.selected.inventoryid]);\r\n         }\r\n     }\r\n\r\n     private gotoAddRailcar():void {\r\n         let temp = {};\r\n         if (this.isSelected) {\r\n             temp = {'template' : this.selected.inventoryid}\r\n         }\r\n         this._router.navigate(['/railcars', 'add', temp]);\r\n     }\r\n\r\n    private openModal(_val: boolean): void {\r\n        this.modal = _val;\r\n    }\r\n\r\n    private ok(): void {\r\n        this._railcar.deleteRailcar('' + this.selected.inventoryid);\r\n        this.openModal(false);\r\n    }\r\n\r\n    private cancel(): void {\r\n        this.openModal(false);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/railcars/common/services/refresh.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAG3C,wBAA2B,cAAc,CAAC,CAAA;AAG1C;IAOI;QAHA,4BAA4B;QACpB,sBAAiB,GAAG,IAAI,iBAAO,EAAM,CAAC;QAG1C,4BAA4B;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IACjE,CAAC;IAED,2BAA2B;IACpB,oCAAW,GAAlB;QACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAhBL;QAAC,iBAAU,EAAE;;sBAAA;IAkBb,qBAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,sBAAc,iBAiB1B,CAAA","file":"app/railcars/common/services/refresh.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject }    from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class RefreshService {\r\n\r\n    public refreshAnnonced: Observable<{}>;\r\n\r\n    // Observable string sources\r\n    private refreshInfoSource = new Subject<{}>();\r\n\r\n    constructor() {\r\n        // Observable string streams\r\n        this.refreshAnnonced = this.refreshInfoSource.asObservable();\r\n    }\r\n\r\n    // Service message commands\r\n    public refreshData() {\r\n        this.refreshInfoSource.next('');\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/railcars/common/directives/railcar-number.validator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0D,eAAe,CAAC,CAAA;AAC1E,sBAA0D,gBAAgB,CAAC,CAAA;AAG9D,wCAAgC,GAAQ;IACnD,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,sBAAsB,EAAtB,CAAsB,CAAC;IACrD,KAAK,EAAE,IAAI;CACZ,CAAC;AAQF;IACE;QACE,oBAAoB;IACtB,CAAC;IACD,yCAAQ,GAAR,UAAS,CAAkB;QACzB,oCAAoC;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAChB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;QACnB,IAAI,GAAG,GAAW,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC;gBACL,aAAa,EAAE,IAAI;aACpB,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN;;;;;;;eAOG;YACH,IAAI,OAAO,GAAkB,EAAE,CAAC;YAChC,IAAI,UAAU,GAAkB,EAAE,CAAC;YACnC,IAAI,WAAS,GAAkB,EAAE,CAAC;YAElC,IAAI,CAAC,GAAW,CAAC,CAAC;YAClB,IAAI,KAAK,GAAW,CAAC,CAAC;YAEtB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzB,IAAI,GAAG,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClB,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAAC,UAAU,CAAC,GAAG,EAAE,CAAC;gBAAC,CAAC;gBAC1C,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpD,CAAC;YACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;YACH,CAAC;YACD,UAAU,CAAC,OAAO,CAAC,UAAC,IAAY;gBAC9B,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;oBACb,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;oBACtC,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBACxC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,KAAK,GAAW,WAAS,CAAC,MAAM,CAAC,UAAC,CAAS,EAAE,CAAS;gBACxD,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,OAAO,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAChE,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC;oBACL,aAAa,EAAE,IAAI;iBACpB,CAAA;YACH,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAnEH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,wFAAwF;YAClG,SAAS,EAAE;gBACT,wCAAgC;aACjC;SACF,CAAC;;8BAAA;IA+DF,6BAAC;AAAD,CA9DA,AA8DC,IAAA;AA9DY,8BAAsB,yBA8DlC,CAAA","file":"app/railcars/common/directives/railcar-number.validator.js","sourcesContent":["import { Directive, forwardRef, provide, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n\r\nexport const RAILCAR_NUMBER_CONTROL_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => RailcarNumberValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[railcarNumber][formControlName],[railcarNumber][formControl],[railcarNumber][ngModel]',\r\n  providers: [\r\n    RAILCAR_NUMBER_CONTROL_VALIDATOR\r\n  ]\r\n})\r\nexport class RailcarNumberValidator implements Validator {\r\n  constructor() {\r\n    // @todo constructor\r\n  }\r\n  validate(c: AbstractControl): { [key: string]: boolean } {\r\n    // self value (e.g. retype password)\r\n    let v = c.value;\r\n    let str_v = '' + v;\r\n    let LEN: number = 8;\r\n    if (str_v.length !== LEN) {\r\n      return {\r\n        railcarNumber: true\r\n      };\r\n    } else {\r\n      /*\r\n      Номер вагона: 7 4 8 5 4 6 8 8\r\n      Множник: 2 1 2 1 2 1 2\r\n      Розрядні добутки: 14 4 16 5 8 6 16\r\n      Порозрядна сума: 1+4+4+1+6+5+8+6+1+6=42\r\n      Порозрядна сума, яка визначається як сума цифр, округляєьться до повного десятка (тобто 50) \r\n      і від нього віднімається (50-42) – ця цифра і буде контрольною (8).\r\n       */\r\n      let numbers: Array<number> = [];\r\n      let multiplers: Array<number> = [];\r\n      let summators: Array<number> = [];\r\n\r\n      let i: number = 0;\r\n      let v_raz: number = v;\r\n\r\n      for (i = 0; i < LEN; i++) {\r\n        let val: number = Math.floor(v_raz / Math.pow(10, (LEN - i - 1)));\r\n        numbers.push(val);\r\n        multiplers.push(val);\r\n        if (i === (LEN - 1)) { multiplers.pop(); }\r\n        v_raz -= numbers[i] * Math.pow(10, (LEN - i - 1));\r\n      }\r\n      for (i = 0; i < LEN - 1; i += 2) {\r\n        if ((i % 2) === 0) {\r\n          multiplers[i] = numbers[i] * 2;\r\n        }\r\n      }\r\n      multiplers.forEach((item: number): void => {\r\n        if (item > 9) {\r\n          summators.push(Math.floor(item / 10));\r\n          summators.push(Math.floor(item % 10));\r\n        } else {\r\n          summators.push(item);\r\n        }\r\n      });\r\n      let total: number = summators.reduce((a: number, b: number): number => {\r\n        return a + b;\r\n      });\r\n\r\n      let control = (10 - (total - Math.floor(total / 10) * 10)) % 10;\r\n      if (control !== numbers[LEN - 1]) {\r\n        return {\r\n          railcarNumber: true\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}
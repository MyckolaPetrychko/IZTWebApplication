{"version":3,"sources":["app/railcars/railcars.service.ts"],"names":[],"mappings":"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","file":"app/railcars/railcars.service.js","sourcesContent":["/**\r\n * @author Maryna Duda maryna.duda@innovinnpromm.com\r\n * @date 23.06.2016 13:39:10\r\n */\r\n\r\nimport {\r\n    Injectable,\r\n    Optional\r\n} from '@angular/core';\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions,\r\n    URLSearchParams\r\n} from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\n// import 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\n\r\n\r\nimport { IRailcarModel } from './railcars.model';\r\nimport { IRailcarEditModel } from './routed-child/railcar-edit/railcar-edit.model';\r\nimport { IRailcarDisparityModel } from './routed-child/railcar-disparity/railcar-disparity.model';\r\nimport {\r\n    RailcarListApi,\r\n    RailcarIdApi,\r\n    RailcarIdDisparityApi,\r\n    RailcarFileApi\r\n} from './railcars.constant';\r\n\r\nimport { AuthService } from '../user/auth.service';\r\nimport { handleError } from '../common/variable/error-handler.function';\r\n\r\n/**\r\n * Service to work with railcars\r\n * \r\n * @export\r\n * @class RailcarService\r\n */\r\n@Injectable()\r\nexport class RailcarService {\r\n    /**\r\n     * Creates an instance of RailcarService.\r\n     * \r\n     * @param {Http} _http - Angular2 http module\r\n     * @param {AuthService} _auth - authen service\r\n     */\r\n    constructor(private _http: Http, private _auth: AuthService) {\r\n        // TODO: RailcarService | check roles as constant\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to get list of railcars :\r\n     * Http: GET RailcarListApi\r\n     * \r\n     * @returns {Observable<IRailcarModel[]> array of railcars}\r\n     */\r\n    public getRailcarList(_begindate: number = 1,\r\n        _enddate: number = null,\r\n\r\n        _astorageid: number = 1,\r\n        _showallowners: number = 0,\r\n\r\n        _shownotreceived: number = 0,\r\n        _showweighted: number = 0,\r\n        _showremoterecords: number = 0,\r\n        _showdeleted: number = 0,\r\n\r\n        _filter_transportnumber: string = '',\r\n        _filter_invoicenumber: string = '',\r\n        _filter_sendernname: string = '',\r\n        _filter_stationname: string = '',\r\n        _filter_cropname: string = ''\r\n    ): Observable<any> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n\r\n        if (_begindate) { params.set('begindate', '' + _begindate); }\r\n        if (_enddate) { params.set('enddate', '' + _enddate); }\r\n\r\n        if (_astorageid) { params.set('astorageid', '' + _astorageid); }\r\n        if (_showallowners) { params.set('showallowners', '' + _showallowners); }\r\n\r\n        if (_shownotreceived) { params.set('shownotreceived', '' + _shownotreceived); }\r\n        if (_showweighted) { params.set('showweighted', '' + _showweighted); }\r\n        if (_showremoterecords) { params.set('showremoterecords', '' + _showremoterecords); }\r\n        if (_showdeleted) { params.set('showdeleted', '' + _showdeleted); }\r\n\r\n        if (_filter_transportnumber !== '') { params.set('filter_transportnumber', _filter_transportnumber); }\r\n        if (_filter_invoicenumber !== '') { params.set('filter_invoicenumber', _filter_invoicenumber); }\r\n        if (_filter_sendernname !== '') { params.set('filter_sendernname', _filter_sendernname); }\r\n        if (_filter_stationname !== '') { params.set('filter_stationname', _filter_stationname); }\r\n        if (_filter_cropname !== '') { params.set('filter_cropname', _filter_cropname); }\r\n\r\n\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n\r\n        return this._http.get(RailcarListApi, { search: params })\r\n            .map(res => <IRailcarModel[]>res.json())\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarList' +\r\n                            '\\nUrl: ' + RailcarListApi +\r\n                            '\\nData Len: ' + data.length + \r\n                              '\\nData: ' + JSON.stringify(data[0]));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n\r\n    public getRailcarDisparityList(railcarId: string): Observable<any> {\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n\r\n        let urlRailcarIdDisparityApi = RailcarIdDisparityApi.replace('%railcarID%', railcarId);\r\n\r\n        return this._http.get(urlRailcarIdDisparityApi)\r\n            .map(res => <IRailcarDisparityModel[]>res.json())\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarIdDisparityApi' +\r\n                    '\\nUrl: ' + urlRailcarIdDisparityApi +\r\n                    '\\nData: ' + JSON.stringify(data.length));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    /**\r\n     * Function to get one railcar selected by id :\r\n     * Http: GET RailcarIdApi\r\n     * \r\n     * @param {string} railcarId - id by railcar\r\n     * @returns {Observable<IRailcarModel> railcar model }\r\n     */\r\n    public getRailcarId(railcarId: string): Observable<any> {\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n        let urlRailcarIdApi = RailcarIdApi.replace('%railcarID%', railcarId);\r\n        return this._http.get(urlRailcarIdApi)\r\n            .map(res => <IRailcarModel>res.json())\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarId' +\r\n                    '\\nUrl: ' + urlRailcarIdApi + '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to add new railcar to list (only for traiders):\r\n     * Http: POST RailcarListApi\r\n     *       Body : IRailcarModel\r\n     *       Headers: 'Content-Type': 'application/json'\r\n     * \r\n     * @param {IRailcarModel} _railcar - model of railcar where add\r\n     * @returns {Observable<any>} - result of adding: _railcar with id || only id\r\n     */\r\n    public addRailcar(_railcar: IRailcarEditModel): Observable<any> {\r\n        // TODO: RailcarService | change to only traider muss add new railcar\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n        if (!this._auth.isAuth('trader')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_IS_NOT_TRADER');\r\n        }\r\n        let body = JSON.stringify(_railcar);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.post(RailcarListApi, body, options)\r\n            .map(res => <IRailcarModel>res.json())\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarAdd' +\r\n                    '\\nUrl: ' + RailcarListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to update data of railcar by id (only for traiders):\r\n     * Http: Put RailcarIdApi\r\n     *       Body : IRailcarModel\r\n     *       Headers: 'Content-Type': 'application/json'\r\n     * \r\n     * @param {IRailcarModel} _railcar  - updated model of railcar\r\n     * @returns {Observable<any>}       - result of update _railcar \r\n     */\r\n    public updateRailcar(_railcar: IRailcarEditModel): Observable<any> {\r\n        // TODO: RailcarService | change to only traider muss add new railcar\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n        if (!this._auth.isAuth('trader')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_IS_NOT_TRADER');\r\n        }\r\n        // TODO:  RailcarService | check id by railcar\r\n        let url = RailcarIdApi.replace('%railcarID%', _railcar.transportnumber);\r\n        let body = JSON.stringify(_railcar);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.put(url, body, options)\r\n            .map(res => <IRailcarModel>res.json())\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarAdd' +\r\n                    '\\nUrl: ' + RailcarListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to delete railcar from list:\r\n     * Http: Del RailcarIdApi\r\n     * \r\n     * @param {string} railcarId - id for delete railcar\r\n     * @returns {Observable<any> - result of delete railcarId }\r\n     */\r\n     \r\n    public deleteRailcar(railcarId: string): Observable<any> {\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n        if (!this._auth.isAuth('trader')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_IS_NOT_TRADER');\r\n        }\r\n        let url = RailcarIdApi.replace('%railcarID%', railcarId);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.delete(url, options)\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarAdd' +\r\n                    '\\nUrl: ' + RailcarListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    /**\r\n     * Api to parse xml file railcar into json IRailcarModel\r\n     * \r\n     * @param {string} file - xml file \r\n     * @returns {Observable<any>} - parset json\r\n     */\r\n    public getRailcarFile(file: string): Observable<any> {\r\n        if (!this._auth.isAuth('user')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n        if (!this._auth.isAuth('trader')) {\r\n            // TODO: #translate | RailcarService\r\n            return Observable.throw('CONNECTION.USER_IS_NOT_TRADER');\r\n        }\r\n        let headers = new Headers({ 'Content-Type': 'application/xml' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let body = JSON.stringify(file);\r\n\r\n        return this._http.get(RailcarFileApi, options).debounceTime(5000)\r\n        .map((data: Response): string => { return data.text(); })\r\n            // TODO: #debug | RailcarService\r\n            .do(data => {\r\n                console.debug('RailcarFileApi' +\r\n                              '\\nUrl: ' + RailcarFileApi +\r\n                              '\\nData Len: ' + 1 + \r\n                              '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n        // return this._http.post(RailcarFileApi, body, options)\r\n        //     // TODO: #debug | RailcarService\r\n        //     .do(data => {\r\n        //         console.debug('RailcarFileApi' +\r\n        //                       '\\nUrl: ' + RailcarFileApi +\r\n        //                       '\\nData Len: ' + 1 + \r\n        //                       '\\nData: ' + JSON.stringify(data));\r\n        //     })\r\n        //     .catch(handleError);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
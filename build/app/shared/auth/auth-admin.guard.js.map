{"version":3,"sources":["app/shared/auth/auth-admin.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AACpD,uBAAoC,iBAAiB,CAAC,CAAA;AACtD,6BAAoC,gBAAgB,CAAC,CAAA;AAIrD;IACI,wBACY,WAAwB,EACvB,MAAc;QADf,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;IAAK,CAAC;IACjC,oCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QACtD,gFAAgF;QAChF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAC,OAAO,EAAE,0BAA0B,EAAC,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAVL;QAAC,iBAAU,EAAE;;sBAAA;IAWb,qBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,sBAAc,iBAU1B,CAAA","file":"app/shared/auth/auth-admin.guard.js","sourcesContent":["import { Injectable }          from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService }         from './user.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthAdminGuard implements CanActivate {\r\n    constructor(\r\n        private authService: UserService,\r\n         private router: Router) {  }\r\n    canActivate() {\r\n        if (this.authService.isAuth('admin')) { return true; }\r\n        // this.router.navigate(['/login', {message: 'CONNECTION.USER_MUSS_BE_ADMIN'}]);\r\n        this.router.navigate(['/login', {message: 'CONNECTION.USER_NOT_AUTH'}]);\r\n        return false;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
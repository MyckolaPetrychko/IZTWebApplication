{"version":3,"sources":["app/shared/auth/auth.service.ts"],"names":[],"mappings":"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","file":"app/shared/auth/auth.service.js","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions\r\n} from '@angular/http';\r\n\r\n\r\n// Statics\r\nimport { Observable }  from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n// Operators\r\nimport 'rxjs/add/operator/catch';\r\n// import 'rxjs/add/operator/debounceTime';\r\n// import 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\n\r\n// import 'rxjs/add/operator/switchMap';\r\n// import 'rxjs/add/operator/toPromise';\r\n\r\n\r\nimport { UserLoginApi, UserLogoutApi, UserIdApi, UserListApi } from './auth.constant';\r\nimport { UserService } from './user.service';\r\nimport { IAuthUser } from './auth-user.model';\r\nimport { USER_ROLES, IUserRoles } from './user-roles.model';\r\n\r\nimport { handleError } from '../variable/error-handler.function';\r\nimport { Base64 } from '../variable/base64.class';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(\r\n        private _http: Http,\r\n        private _user: UserService) {\r\n\r\n    }\r\n\r\n    public login(user: string, pass: string): Observable<IAuthUser | string> {\r\n        // TODO: FIX md5, ssh???\r\n        var str: string = 'Basic ' + Base64.encode(user + ':' + pass);\r\n        let options: RequestOptions = new RequestOptions();\r\n        options.headers = new Headers();\r\n        options.headers.append('Authorization', str);\r\n\r\n        return this._http.get(UserLoginApi, options)\r\n            .map((data: Response): IAuthUser => { return <IAuthUser>data.json(); })\r\n            .catch(handleError);\r\n    }\r\n\r\n    public logout() {\r\n        this._user.changeUser(<IAuthUser>{});\r\n    }\r\n\r\n    getUserList(): Observable<any> {\r\n        return this._http.get(UserListApi)\r\n            .map(res => <IAuthUser[]>res.json())\r\n            .do(data => {\r\n                console.debug('UserList' +\r\n                    '\\nUrl: ' + UserListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    public getUserId(userId: number): Observable<any> {\r\n        let urlUserIdApi = UserIdApi.replace('%userID%', '' + userId);\r\n        return this._http.get(urlUserIdApi)\r\n            .map(res => <IAuthUser>res.json())\r\n            .do(data => {\r\n                console.debug('UserId' +\r\n                    '\\nUrl: ' + urlUserIdApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    public addUser(_user: IAuthUser): Observable<IAuthUser | string> {\r\n        let body = JSON.stringify(_user);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.post(UserListApi, body, options)\r\n            .map(res => <IAuthUser>res.json())\r\n            .do(data => {\r\n                console.debug('UserAdd' +\r\n                    '\\nUrl: ' + UserListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    public updateUser(userId: number, _newUser: IAuthUser): Observable<IAuthUser | string> {\r\n        let url = UserIdApi.replace('%railcarID%', '' + userId);\r\n        let body = JSON.stringify(_newUser);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.put(url, body, options)\r\n            .map(res => <IAuthUser>res.json())\r\n            .do(data => {\r\n                console.debug('UserUpdate' +\r\n                    '\\nUrl: ' + UserListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n    public deleteUser(userId: number): Observable<IAuthUser | string> {\r\n        let url = UserIdApi.replace('%railcarID%', '' + userId);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.delete(url, options)\r\n            .do(data => {\r\n                console.debug('RailcarDelete' +\r\n                    '\\nUrl: ' + UserListApi +\r\n                    '\\nData: ' + JSON.stringify(data));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
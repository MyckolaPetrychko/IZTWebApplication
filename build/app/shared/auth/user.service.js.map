{"version":3,"sources":["app/shared/auth/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,wBAA2B,cAAc,CAAC,CAAA;AAG1C,8BAA6C,iBAAiB,CAAC,CAAA;AAC/D,iCAAuC,oBAAoB,CAAC,CAAA;AAG5D;IAUI;QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,6BAAU,CAAC;QAE1B,IAAI,CAAC,WAAW,GAAc,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAO,EAAa,CAAC;QAC3C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAEzD,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;QAChD,CAAC;IACL,CAAC;IAEM,gCAAU,GAAjB,UAAkB,KAAgB;QAC9B,EAAE,CAAC,CACC,CAAC,CAAE,KAAK;eACL,CAAC,CAAE,CAAC,EAAE,GAAE,KAAK,CAAC,EAAE,CAAC;eACjB,KAAK,CAAC,EAAE,KAAK,IAAI;eACjB,KAAK,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAIM,+BAAS,GAAhB;QACI,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,CAAC,CACH,IAAI,CAAC,UAAU,CAClB,CAAC;IACN,CAAC;IAEM,4BAAM,GAAb,UAAc,KAAa;QACvB,MAAM,CAAC,CACH,IAAI,CAAC,UAAU;eACZ,IAAI,CAAC,KAAK;eACV,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CACrD,CAAC;IACN,CAAC;IAEM,oCAAc,GAArB;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEO,8BAAQ,GAAhB;QACI,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,4CAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClG,CAAC;IAEO,wCAAkB,GAA1B;QACI,MAAM,CAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,4CAA4B,CAAC,CAAC,CAAC;IAC9F,CAAC;IAEO,0CAAoB,GAA5B;QACI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,4CAA4B,CAAC,CAAC;IACzE,CAAC;IAEO,2CAAqB,GAA7B;QACI,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,4CAA4B,CAAC,CAAC;IACnE,CAAC;IAjFL;QAAC,iBAAU,EAAE;;mBAAA;IAkFb,kBAAC;AAAD,CAjFA,AAiFC,IAAA;AAjFY,mBAAW,cAiFvB,CAAA","file":"app/shared/auth/user.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject }    from 'rxjs/Subject';\r\nimport { IAuthUser } from './auth-user.model';\r\n\r\nimport { USER_LOCAL_STRORAGE_CONSTANT } from './auth.constant';\r\nimport { USER_ROLES, IUserRoles } from './user-roles.model';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    public userChangeAnnonced: Observable<IAuthUser>;\r\n    private currentUser: IAuthUser;\r\n    private userSource: Subject<IAuthUser>;\r\n\r\n    private _role : string;\r\n    private _isLogined : boolean;\r\n    private _roles: IUserRoles;\r\n\r\n    constructor() {\r\n        this._isLogined = false;\r\n        this._role = null;\r\n         this._roles = USER_ROLES;\r\n\r\n        this.currentUser = <IAuthUser>{};\r\n        this.userSource = new Subject<IAuthUser>();\r\n        this.userChangeAnnonced = this.userSource.asObservable();\r\n\r\n        if (this.isUserInLocalStorage()) {\r\n            this.changeUser (this.getUserFromStorage());\r\n        }\r\n    }\r\n\r\n    public changeUser(_user: IAuthUser) {\r\n        if (\r\n            !! _user\r\n            && !! ('' +_user.id)\r\n            && _user.id !== null\r\n            && _user.id !== undefined) {\r\n            console.info('User is auth' + _user.username);\r\n            this.currentUser = _user;\r\n            this._isLogined = true;\r\n            this._role = this.currentUser.roles[0];\r\n            this.saveUser();\r\n        } else {\r\n            console.warn('User is not auth' + _user.username);\r\n            this._isLogined = false;\r\n            this._role = null;\r\n            this.currentUser = null;\r\n            this.deleteUserFromStorage();\r\n        }\r\n        this.userSource.next(this.currentUser);\r\n    }\r\n\r\n\r\n\r\n    public isLogined(): boolean {\r\n        console.log('Is logined' + this._isLogined);\r\n        return (\r\n            this._isLogined\r\n        );\r\n    }\r\n\r\n    public isAuth(_role: string) {\r\n        return (\r\n            this._isLogined\r\n            && this._role\r\n            && (this._roles[_role].indexOf(this._role) !== -1)\r\n        );\r\n    }\r\n\r\n    public getCurrentUser(): IAuthUser {\r\n        return this.currentUser;\r\n    }\r\n\r\n    private saveUser() {\r\n        window.sessionStorage.setItem(USER_LOCAL_STRORAGE_CONSTANT, JSON.stringify(this.currentUser));\r\n    }\r\n\r\n    private getUserFromStorage(): IAuthUser {\r\n        return <IAuthUser>JSON.parse(window.sessionStorage.getItem(USER_LOCAL_STRORAGE_CONSTANT));\r\n    }\r\n\r\n    private isUserInLocalStorage(): boolean {\r\n        return !!window.sessionStorage.getItem(USER_LOCAL_STRORAGE_CONSTANT);\r\n    }\r\n\r\n    private deleteUserFromStorage(): void {\r\n        window.sessionStorage.removeItem(USER_LOCAL_STRORAGE_CONSTANT);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
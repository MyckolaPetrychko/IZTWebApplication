{"version":3,"sources":["app/shared/variable/error-handler.function.ts"],"names":[],"mappings":";AAMA,2BAA2B,iBAAiB,CAAC,CAAA;AAE7C,qBAA4B,GAAa;IACrC,IAAI,OAAO,GAAW,oCAAoC,CAAC;IAC3D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG;gBACJ,OAAO,GAAG,wBAAwB,CAAC;gBACnC,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,sBAAsB,CAAC;gBACjC,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,+BAA+B,CAAC;gBAC1C,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,0BAA0B,CAAC;gBACrC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,kBAAkB,GAAG,OAAO,CAAC;gBACpD,KAAK,CAAC;YACV,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACJ,OAAO,GAAG,8BAA8B,CAAC;gBACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,kBAAkB,GAAG,OAAO,CAAC;gBACpD,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,2BAA2B,CAAC;gBACtC,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,kCAAkC,CAAC;gBAC7C,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,GAAG,wBAAwB,CAAC;gBACnC,KAAK,CAAC;YACV;gBACI,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC;gBACzB,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,GAAG,aAAa,GAAG,OAAO,CAAC,CAAC;IAC5E,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACrC,CAAC;AAtCe,mBAAW,cAsC1B,CAAA","file":"app/shared/variable/error-handler.function.js","sourcesContent":["import {\r\n    Http,\r\n    Response,\r\n} from '@angular/http';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport function handleError(err: Response): Observable<string> {\r\n    let message: string = 'CONNECTION.SERVER_CONNECTION_ERROR';\r\n    if (!err.ok) {\r\n        switch (err.status) {\r\n            case 400:\r\n                message = 'CONNECTION.BAD_REQUEST';\r\n                break;\r\n            case 404:\r\n                message = 'CONNECTION.NOT_FOUND';\r\n                break;\r\n            case 403:\r\n                message = 'CONNECTION.PERMISSION_DENNIED';\r\n                break;\r\n            case 401:\r\n                message = 'CONNECTION.USER_NOT_AUTH';\r\n                window.location.href = '#/login;message=' + message;\r\n                break;\r\n            case 408:\r\n            case 440:\r\n                message = 'CONNECTION.USER_AUTH_TIMEOUT';\r\n                window.location.href = '#/login;message=' + message;\r\n                break;\r\n            case 409:\r\n                message = 'CONNECTION.CONFLICT_ERROR';\r\n                break;\r\n            case 500:\r\n                message = 'CONNECTION.SERVER_INTERNAL_ERROR';\r\n                break;\r\n            case 502:\r\n                message = 'CONNECTION.BAD_GATEWAY';\r\n                break;\r\n            default:\r\n                message = err.statusText;\r\n                break;\r\n        }\r\n    }\r\n    console.error(err.url + '\\nStatus:' + err.status + '\\n Message:' + message);\r\n    return Observable.throw(message);\r\n}\r\n"],"sourceRoot":"/source/"}
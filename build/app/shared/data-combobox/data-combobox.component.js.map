{"version":3,"sources":["app/shared/data-combobox/data-combobox.component.ts"],"names":[],"mappings":"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","file":"app/shared/data-combobox/data-combobox.component.js","sourcesContent":["import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, Provider, forwardRef } from '@angular/core';\r\nimport { NgIf, NgClass } from '@angular/common'\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { DataFilterPipe } from '../../common/pipes/data-filter.pipe';\r\nimport { IDataModel } from '../../filters-data/data.model';\r\nimport { TranslatePipe } from 'ng2-translate';\r\n\r\nconst noop = () => {\r\n    // noop\r\n};\r\n\r\nexport const DATA_COMBOBOX_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DataComboboxComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-combobox-data',\r\n    templateUrl: './data-combobox.component.html',\r\n    directives: [NgIf, NgClass],\r\n    pipes: [DataFilterPipe, TranslatePipe],\r\n    providers: [DATA_COMBOBOX_CONTROL_VALUE_ACCESSOR]\r\n})\r\n\r\nexport class DataComboboxComponent implements ControlValueAccessor {\r\n\r\n    @Input() dropdown: boolean = false;\r\n    @Input('id') idName: string = 'comboboxID';\r\n\r\n    @Input() prop: string = 'id';\r\n    @Input() display: string = 'name';\r\n\r\n    private selectProperty: string;\r\n    private dataList: IDataModel[];\r\n    private filterValue: string;\r\n    private selectedValue: IDataModel = <IDataModel>{};\r\n    private isOpenedMenu: boolean;\r\n\r\n    //Placeholders for the callbacks which are later providesd\r\n    //by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    constructor() {\r\n        this.data = [];\r\n    }\r\n\r\n    @Input()\r\n    set data(_d: IDataModel[]) {\r\n        if (_d) {\r\n        this.dataList = _d;\r\n\r\n            if (this.selectProperty && this.selectProperty !== '') {\r\n                for (var i = 0; i < this.dataList.length; i++) {\r\n                    if (this.dataList[i][this.prop] === this.selectProperty) {\r\n                        this.SelectElement(this.dataList[i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public SelectElement(elem: IDataModel): void {\r\n        this.selectedValue = elem;\r\n        if (!elem) {\r\n            this.selectProperty = null;\r\n            this.filterValue = null;\r\n        } else {\r\n            this.selectProperty = elem[this.prop];\r\n            this.filterValue = elem[this.display];\r\n        }\r\n        this.ToogleMenu(false);\r\n    }\r\n\r\n    public ToogleMenu(state: boolean): void {\r\n        if (state) {\r\n            this.selectedValue = <IDataModel>{};\r\n            this.filterValue = null;\r\n        }\r\n        if (this.dropdown) {\r\n            this.isOpenedMenu = state;\r\n        }\r\n\r\n        if (this.selectedValue) {\r\n            this.onChangeCallback(this.selectedValue[this.prop]);\r\n        } else {\r\n            this.onChangeCallback(null);\r\n        }\r\n    }\r\n\r\n    public isActive(item: IDataModel): boolean {\r\n        return (item.id === this.selectedValue.id);\r\n    }\r\n\r\n    // //get accessor\r\n    // get value(): string | number {\r\n    //     return this.selectedValue[this.prop];\r\n    // };\r\n\r\n    // //set accessor including call the onchange callback\r\n    // set value(v: string | number) {\r\n    //     for (var i = 0; i < this.data.length; i++) {\r\n    //         if (this.data[i][this.prop] === v) {\r\n    //             this.SelectElement(this.data[i]);\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    //From ControlValueAccessor interface\r\n    writeValue(value: string) {\r\n        // console.log(value + ' first');\r\n        if ((value !== undefined) && (value !== null)) {\r\n            if (value !== this.selectedValue[this.prop]) {\r\n                this.selectProperty = value;\r\n                if (this.dataList.length > 0) {\r\n                    for (var i = 0; i < this.dataList.length; i++) {\r\n                        if (this.dataList[i][this.prop] === value) {\r\n                            this.SelectElement(this.dataList[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.SelectElement(<IDataModel>{});\r\n        }\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/source/"}
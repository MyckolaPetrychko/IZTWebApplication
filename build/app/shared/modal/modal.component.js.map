{"version":3,"sources":["app/shared/modal/modal.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBACuD,eAAe,CAAC,CAAA;AACvE,uBAA8B,iBAAiB,CAAC,CAAA;AAChD,8BAA8B,eAAe,CAAC,CAAA;AAgB9C;IAwDI,wBAAsB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAvB9B,OAAE,GAAW,SAAS,CAAC;QAYtB,eAAU,GAAG,IAAI,mBAAY,EAAE,CAAC;QAChC,cAAS,GAAG,IAAI,mBAAY,EAAE,CAAC;QAC/B,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAC;QAUzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IA5DQ,sBAAI,gCAAI;aAAR,UAAS,KAAa;YAC3B,EAAE,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YAErC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;gBAC7B,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;YAEnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;gBACrC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YACjC,CAAC;QACL,CAAC;;;OAAA;IACQ,sBAAI,mCAAO;aAAX,UAAY,QAAgB;YACjC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IACQ,sBAAI,gCAAI;aAAR,UAAS,QAAiB;YAC/B,2DAA2D;YAC3D,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,KAAK,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAQ,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAAA,CAAC;YAAA,CAAC;YACrD,0BAA0B;YAC1B,2CAA2C;QAEnD,CAAC;;;OAAA;IAOQ,sBAAI,gCAAI;aAAR,UAAW,EAAU;YAArB,iBAIR;YAHG,MAAM,CAAC,UAAU,CAAC;gBACd,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YACtB,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;QAClB,CAAC;;;OAAA;IAoBD,iCAAQ,GAAR;QACI,+CAA+C;IACnD,CAAC;IAED,oCAAW,GAAX,UAAY,OAA0C;QACjD,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;QAGhC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,mCAAmC;IACnC,4BAA4B;IAC5B,mCAAmC;IACnC,IAAI;IAEJ,0BAA0B;IAC1B,uCAAuC;IACvC,4BAA4B;IAC5B,mCAAmC;IACnC,IAAI;IAEG,8BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAxFD;QAAC,YAAK,EAAE;;;8CAAA;IAqBR;QAAC,YAAK,EAAE;;;iDAAA;IAGR;QAAC,YAAK,EAAE;;;8CAAA;IAQR;QAAC,YAAK,EAAE;;8CAAA;IAER;QAAC,YAAK,EAAE;;iDAAA;IACR;QAAC,YAAK,EAAE;;iDAAA;IACR;QAAC,YAAK,CAAC,OAAO,CAAC;;oDAAA;IAEf;QAAC,YAAK,EAAE;;;8CAAA;IAMR;QAAC,aAAM,EAAE;;sDAAA;IACT;QAAC,aAAM,EAAE;;qDAAA;IACT;QAAC,aAAM,EAAE;;yDAAA;IA5Db;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,sBAAsB;YACnC,sCAAsC;YACtC,UAAU,EAAE,CAAC,gBAAO,EAAE,aAAI,CAAC;YAC3B,KAAK,EAAE,CAAC,6BAAa,CAAC;YACtB,IAAI,EAAE;gBACF,QAAQ,EAAE,SAAS;gBACnB,UAAU,EAAE,IAAI;aACnB;SACJ,CAAC;;sBAAA;IA4FF,qBAAC;AAAD,CA1FA,AA0FC,IAAA;AA1FY,sBAAc,iBA0F1B,CAAA","file":"app/shared/modal/modal.component.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, \r\n    OnChanges, SimpleChange, ElementRef, Inject } from '@angular/core';\r\nimport { NgClass, NgIf } from '@angular/common';\r\nimport { TranslatePipe } from 'ng2-translate';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-modal',\r\n    templateUrl: 'modal.component.html',\r\n    // styleUrls: ['modal.component.css'],\r\n    directives: [NgClass, NgIf],\r\n    pipes: [TranslatePipe],\r\n    host: {\r\n        '(blur)': 'close()',\r\n        'tabindex': '-1'\r\n    }\r\n})\r\n\r\nexport class ModalComponent implements OnInit {\r\n    @Input() set type(_type: string) {\r\n        if (_type === 'info') {\r\n            this.iconClass = 'fa-info';\r\n            this.typeClass = 'alert-info-message';\r\n            this.typeTitle = 'ALERT.INFO';\r\n        } else if (_type === 'warn') {\r\n            this.iconClass = 'fa-warning';\r\n            this.typeClass = 'alert-warn-message';\r\n            this.typeTitle = 'ALERT.WARNING';\r\n\r\n        } else if (_type === 'error') {\r\n            this.iconClass = 'fa-remove';\r\n            this.typeClass = 'alert-error-message';\r\n            this.typeTitle = 'ALERT.ERROR';\r\n\r\n        } else {\r\n            this.iconClass = 'fa-bug';\r\n            this.typeClass = 'alert-bug-message';\r\n            this.typeTitle = 'ALERT.BUG';\r\n        }\r\n    }\r\n    @Input() set message(_message: string) {\r\n        this.mess = _message;\r\n    }\r\n    @Input() set open(_visible: boolean) {\r\n        // let el : HTMLElement = document.getElementById(this.id);\r\n        this.visible = _visible || false;\r\n          if (this.visible ) { this.elem.nativeElement.focus();};\r\n            // console.log(this.elem);\r\n            //             console.log(this.id + 'id');\r\n\r\n    }\r\n    @Input() id: string = 'modalID';\r\n\r\n    @Input() small : boolean;\r\n    @Input() modal: boolean;\r\n    @Input('close') closeBtn: boolean;\r\n    \r\n    @Input() set time ( _t: number) {\r\n        window.setTimeout(() => {\r\n            this.open = false;\r\n        }, _t * 1000);\r\n    } \r\n\r\n    @Output() openChange = new EventEmitter();\r\n    @Output() OkPressed = new EventEmitter();\r\n    @Output() CancelPressed = new EventEmitter();\r\n\r\n    private visible: boolean;\r\n\r\n    private mess: string;\r\n    private typeTitle: string;\r\n    private iconClass: string;\r\n    private typeClass: string;\r\n\r\n    constructor( private  elem : ElementRef ) {\r\n        this.visible = false;\r\n        this.type = 'info';\r\n        this.modal = false;\r\n        this.closeBtn = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // console.log(this.type + ' ' + this.visible);\r\n    }\r\n\r\n    ngOnChanges(changes : { [prop:string] : SimpleChange }) {\r\n         for (let propName in changes) {\r\n            // console.log(propName + ':' + changes[propName].currentValue);\r\n            \r\n        }\r\n    }\r\n\r\n    // public ok(): void {\r\n    //     this.OkPressed.emit('true');\r\n    //     this.visible = false;\r\n    //     this.openChange.emit(false);\r\n    // }\r\n\r\n    // public cancel(): void {\r\n    //     this.CancelPressed.emit('true');\r\n    //     this.visible = false;\r\n    //     this.openChange.emit(false);\r\n    // }\r\n\r\n    public close():void {\r\n        this.visible = false;\r\n        this.openChange.emit(false);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/shared/input/input.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiG,eAAe,CAAC,CAAA;AACjH,uBAA8B,iBAC9B,CAAC,CAD8C;AAC/C,sBAAwD,gBAAgB,CAAC,CAAA;AAEzE,IAAM,IAAI,GAAG;IACT,UAAU;AACd,CAAC,CAAC;AAEW,yCAAiC,GAAQ;IAClD,OAAO,EAAE,yBAAiB;IAC1B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;IAC7C,KAAK,EAAE,IAAI;CACd,CAAC;AAWF;IAWI;QAVa,WAAM,GAAW,SAAS,CAAC;QAExC,yBAAyB;QACjB,eAAU,GAAQ,EAAE,CAAC;QAE7B,0DAA0D;QAC1D,+BAA+B;QACvB,sBAAiB,GAAe,IAAI,CAAC;QACrC,qBAAgB,GAAqB,IAAI,CAAC;QAG9C,cAAc;IAClB,CAAC;IAID,sBAAI,iCAAK;QADT,cAAc;aACd;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;QAED,mDAAmD;aACnD,UAAU,CAAM;YACZ,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;;;OARA;;IAUD,qBAAqB;IACrB,+BAAM,GAAN;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,qCAAqC;IACrC,mCAAU,GAAV,UAAW,KAAU;QACjB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;IACL,CAAC;IAED,qCAAqC;IACrC,yCAAgB,GAAhB,UAAiB,EAAO;QACpB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,qCAAqC;IACrC,0CAAiB,GAAjB,UAAkB,EAAO;QACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAhDD;QAAC,YAAK,CAAC,IAAI,CAAC;;kDAAA;IAVhB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,wBAAwB;YACrC,UAAU,EAAE,CAAC,aAAI,EAAE,gBAAO,CAAC;YAC3B,SAAS,EAAE,CAAC,yCAAiC,CAAC;SACjD,CAAC;;sBAAA;IAqDF,qBAAC;AAAD,CAlDA,AAkDC,IAAA;AAlDY,sBAAc,iBAkD1B,CAAA","file":"app/shared/input/input.component.js","sourcesContent":["import { Component, OnInit, OnDestroy, Input, Output, EventEmitter,  Provider, forwardRef } from '@angular/core';\r\nimport { NgIf, NgClass } from '@angular/common'\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nconst noop = () => {\r\n    // 'noop';\r\n};\r\n\r\nexport const WBLG_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-input',\r\n    templateUrl: './input.component.html',\r\n    directives: [NgIf, NgClass],\r\n    providers: [WBLG_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\n\r\n\r\nexport class InputComponent implements ControlValueAccessor {\r\n    @Input('id') idName: string = 'inputID';\r\n\r\n    //The internal data model\r\n    private innerValue: any = '';\r\n\r\n    //Placeholders for the callbacks which are later providesd\r\n    //by the Control Value Accessor\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    constructor() {\r\n        // constructor\r\n    }\r\n\r\n\r\n    //get accessor\r\n    get value(): any {\r\n        return this.innerValue;\r\n    };\r\n\r\n    //set accessor including call the onchange callback\r\n    set value(v: any) {\r\n        if (v !== this.innerValue) {\r\n            this.innerValue = v;\r\n            this.onChangeCallback(v);\r\n        }\r\n    }\r\n\r\n    //Set touched on blur\r\n    onBlur() {\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    writeValue(value: any) {\r\n        if (value !== this.innerValue) {\r\n            this.innerValue = value;\r\n        }\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/source/"}
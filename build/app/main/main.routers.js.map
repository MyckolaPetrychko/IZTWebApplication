{"version":3,"sources":["app/main/main.routers.ts"],"names":[],"mappings":";AAAA,uBAEc,iBAAiB,CAAC,CAAA;AAGhC,uBACgC,iBAAiB,CAAC,CAAA;AAClD,mCAAqC,gCAAgC,CAAC,CAAA;AAMtE,iCAA+B,iCAAiC,CAAC,CAAA;AAEpD,cAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;IACC,qBAAqB;IACvB,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,4BAA4B,EAAE;IAChE,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,qBAAqB,EAAE;IAGtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sCAAiB,EAAE,WAAW,EAAE,CAAC,iCAAc,CAAC,EAAE;CAElF,CAAC;AAES,uBAAe,GAAS;IAC/B,EAAE,OAAO,EAAE,yBAAgB,EAAE,QAAQ,EAAE,6BAAoB,EAAE;CAChE,CAAA;AAGY,eAAO,GAAG,qBAAY,CAAC,OAAO,CAAC,cAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC","file":"app/main/main.routers.js","sourcesContent":["import { Routes,\r\n         RouterModule,\r\n       } from '@angular/router';\r\n\r\n       import {provide} from '@angular/core' \r\nimport { LocationStrategy,\r\n    HashLocationStrategy } from '@angular/common';\r\nimport { SettingsComponent }    from '../settings/settings.component';\r\n// import { railcarsRoutes }    from '../railcars/railcar.route';\r\nimport { UserLoginComponent }    from '../user/login.component';\r\nimport { UserProfileComponent }    from '../user/profile.component';\r\n\r\nimport { AuthGuard } from '../shared/auth/auth-user.guard';\r\nimport { AuthAdminGuard } from '../shared/auth/auth-admin.guard';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n    // ...railcarsRoutes,\r\n  { path: 'railcars', loadChildren: '../railcars/railcar.module' },\r\n  { path: 'login', loadChildren: '../user/user.module' },\r\n\r\n\r\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthAdminGuard] },\r\n\r\n];\r\n\r\nexport let routerProviders : any = [\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n]\r\n\r\n\r\nexport const routing = RouterModule.forRoot(routes, {useHash: true});\r\n"],"sourceRoot":"/source/"}
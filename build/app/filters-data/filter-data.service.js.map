{"version":3,"sources":["app/filters-data/filter-data.service.ts"],"names":[],"mappings":"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","file":"app/filters-data/filter-data.service.js","sourcesContent":["/*\r\n * @author Марина Усатюк maryna.duda@innovinnprom.com\r\n * @date 09.08.2016 11:04:00\r\n *\r\n * Copyright (c) 2016 ИННОВИННПРОМ\r\n */\r\n\r\nimport {\r\n    Injectable,\r\n    Optional\r\n} from '@angular/core';\r\n\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions,\r\n\r\n} from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\n\r\nimport { AuthService } from '../user/auth.service';\r\nimport { handleError } from '../common/variable/error-handler.function';\r\n\r\nimport {\r\n    SendersApi,\r\n    ProvidersApi,\r\n    OwnersApi,\r\n    StationsApi,\r\n    StoragesApi,\r\n    ScalesTypeApi,\r\n    CulturesApi,\r\n    CulturesClassesApi,\r\n    CulturesSortesApi\r\n} from './filter-data.constant';\r\n\r\nimport {IDataModel} from './data.model';\r\n\r\n/**\r\n * Service to work with data filters\r\n * \r\n * @export\r\n * @class DataFilterService\r\n */\r\n@Injectable()\r\nexport class DataFilterService {\r\n    /**\r\n     * Creates an instance of DataFilterService.\r\n     * \r\n     * @param {Http} _http - Angular2 http module\r\n     * @param {AuthService} _auth - authenticationServise\r\n     */\r\n    constructor(private _http: Http, private _auth: AuthService) {\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getSendersList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(SendersApi.url,\r\n            SendersApi.idValue,\r\n            SendersApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getOwnersList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(OwnersApi.url,\r\n            OwnersApi.idValue,\r\n            OwnersApi.nameValue);\r\n\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getProvidersList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(ProvidersApi.url,\r\n            ProvidersApi.idValue,\r\n            ProvidersApi.nameValue);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getStoragessList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(StoragesApi.url,\r\n            StoragesApi.idValue,\r\n            StoragesApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getScalesTypeList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(ScalesTypeApi.url,\r\n            ScalesTypeApi.idValue,\r\n            ScalesTypeApi.nameValue);\r\n    }\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getStationsList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(StationsApi.url,\r\n            StationsApi.idValue,\r\n            StationsApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getCulturesList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(CulturesApi.url,\r\n            CulturesApi.idValue,\r\n            CulturesApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getCultureClassesList(): Observable<IDataModel[]  | string> {\r\n        return this._getFiltersHttp(CulturesClassesApi.url,\r\n            CulturesClassesApi.idValue,\r\n            CulturesClassesApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @returns {(Observable<IDataModel | string>)}\r\n     */\r\n    public getCultureSortesList(): Observable<IDataModel[] | string> {\r\n        return this._getFiltersHttp(CulturesSortesApi.url,\r\n            CulturesSortesApi.idValue,\r\n            CulturesSortesApi.nameValue);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @private\r\n     * @param {string} url\r\n     * @param {string} [id=undefined]\r\n     * @param {string} [name=undefined]\r\n     * @returns {(Observable<IDataModel[] | string>)}\r\n     */\r\n    private _getFiltersHttp(url: string,\r\n        id: string = undefined,\r\n        name: string = undefined)\r\n        : Observable<IDataModel[] | string> {\r\n        if (!this._auth.isAuth('user')) {\r\n            return Observable.throw('CONNECTION.USER_NOT_AUTH');\r\n        }\r\n\r\n        return this._http.get(url)\r\n            .map(res => <IDataModel[]>(res.json().map((item: { [name: string]: string }): IDataModel => {\r\n                if (id && name) {\r\n                    let _it: IDataModel = <IDataModel>{};\r\n                    _it.id = item[id];\r\n                    _it.name = item[name];\r\n                    return _it;\r\n                }\r\n            })))\r\n            .do((data: IDataModel[]): void => {\r\n                console.debug('Data Filtes:' +\r\n                              '\\nUrl: ' + url +\r\n                              '\\nData Len: ' + data.length + \r\n                              '\\nData: ' + JSON.stringify(data[0]));\r\n            })\r\n            .catch(handleError);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}
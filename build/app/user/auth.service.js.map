{"version":3,"sources":["app/user/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAmC,eAAe,CAAC,CAAA;AACnD,qBAKO,eAAe,CAAC,CAAA;AAKvB,QAAO,2BAA2B,CAAC,CAAA;AAEnC,YAAY;AACZ,QAAO,yBAAyB,CAAC,CAAA;AACjC,2CAA2C;AAC3C,mDAAmD;AACnD,QAAO,uBAAuB,CAAC,CAAA;AAO/B,iCAAuC,oBAAoB,CAAC,CAAA;AAG5D;IAOI,qBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC3B,oBAAoB;QACpB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,6BAAU,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,2BAAK,GAAZ,UAAa,IAAa,EAAE,IAAY;QACpC,gFAAgF;QAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAE3B,CAAC;IAEM,4BAAM,GAAb,UAAe,KAAc;QACzB,IAAI,GAAa,CAAC;QAClB,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACrB,GAAG,GAAG,KAAK,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAE,KAAK,GAAG,IAAI,CAAC;QACvE,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAEM,4BAAM,GAAb;QACI,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAEM,+BAAS,GAAhB;QAEI,4BAA4B;QAE5B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAA;QACtB,yCAAyC;IAC7C,CAAC;IA3CL;QAAC,iBAAU,EAAE;;mBAAA;IA4Cb,kBAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,mBAAW,cA2CvB,CAAA","file":"app/user/auth.service.js","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n    Http,\r\n    Response,\r\n    Headers,\r\n    RequestOptions\r\n} from '@angular/http';\r\n\r\n\r\n// Statics\r\nimport { Observable }  from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n// Operators\r\nimport 'rxjs/add/operator/catch';\r\n// import 'rxjs/add/operator/debounceTime';\r\n// import 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\n// import 'rxjs/add/operator/switchMap';\r\n// import 'rxjs/add/operator/toPromise';\r\n\r\n\r\nimport {UserLoginApi, UserLogoutApi } from './auth.constant';\r\nimport { IAuthUser } from './auth-user.model';\r\nimport { USER_ROLES, IUserRoles } from './user-roles.model';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    public _isLogined : boolean; \r\n    // public user : IAuthUser;\r\n    public role: string;\r\n    private _roles: IUserRoles;\r\n\r\n    constructor(private _http: Http) { \r\n        // ROD: remove debug\r\n        this.role = 'admin';\r\n        this._roles = USER_ROLES;\r\n        this._isLogined = true;\r\n    }\r\n\r\n    public login(user : string, pass: string): any {\r\n        // let _url = UserLoginApi.replace('%login%', user).replace('%password%', pass);\r\n        this.role = user;\r\n        this._isLogined = true;\r\n        \r\n    }\r\n\r\n    public isAuth( _role : string  ) {\r\n        let res : boolean;\r\n        if ( !this._isLogined ) {\r\n            res = false;\r\n        } else {\r\n            res = (this._roles[_role].indexOf(this.role) === -1)? false : true;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public logout() {\r\n        this.role = 'anonym';\r\n        this._isLogined = false;\r\n    }\r\n\r\n    public isLogined() {\r\n        \r\n        // console.log('isLogined');\r\n        \r\n        return this._isLogined\r\n        //return Observable.of(this._isLogined); \r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/source/"}
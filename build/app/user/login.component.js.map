{"version":3,"sources":["app/user/login.component.ts"],"names":[],"mappings":"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","file":"app/user/login.component.js","sourcesContent":["import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\r\nimport { AuthService } from '../shared/auth/auth.service';\r\nimport { UserService } from '../shared/auth/user.service';\r\nimport { IAuthUser } from '../shared/auth/auth-user.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'user-login',\r\n    templateUrl: 'login.component.html'\r\n    // styles : ['login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit, OnDestroy {\r\n    private user: { username: string, password: string };\r\n\r\n    private message: string;\r\n    private type: string;\r\n    private time: number;\r\n    private visibility: boolean;\r\n\r\n    private mainModal: boolean;\r\n    private isErrRouterMess: boolean;\r\n    private errRouterMess: boolean;\r\n\r\n    private _roterSub: Subscription;\r\n\r\n    constructor(\r\n        private _user: UserService,\r\n        private _auth: AuthService,\r\n        private _route: Router,\r\n        private _router: ActivatedRoute) {\r\n\r\n        this.isErrRouterMess = false;\r\n        this.visibility = false;\r\n        this.mainModal = true;\r\n        // this.setMessage('MESSAGE.LOADING', 0, 'info');\r\n        this.user = {\r\n            username: null,\r\n            password: null\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n                this.mainModal = true;\r\n\r\n        this._roterSub = this._router.params.subscribe(\r\n            (params: Params): void => {\r\n                this.errRouterMess = params['message'];\r\n                this.isErrRouterMess = (!!this.errRouterMess);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._roterSub.unsubscribe();\r\n    }\r\n\r\n\r\n        @HostListener('click') onClick() {\r\n            // NOTE: fix close event by outside modal click;\r\n                this.mainModal = true;\r\n\r\n    }\r\n\r\n    public login() {\r\n        this._auth.login(this.user.username, this.user.password)\r\n            .subscribe(\r\n            (data: IAuthUser) => {\r\n                this._user.changeUser(data);\r\n                if (this.isErrRouterMess) {\r\n                    this.cancel();\r\n                } else {\r\n                    this._route.navigate(['/railcars']);\r\n                }\r\n\r\n            }, (err: string): void => {\r\n                this._user.changeUser(null);\r\n                this.setMessage(err, 0, 'error');\r\n                console.error(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    private setMessage(_mess: string, _time: number, _type: string) {\r\n        this.message = _mess;\r\n        this.type = _type;\r\n        this.time = _time;\r\n        this.visibility = true;\r\n    }\r\n\r\n    private cancel(): void {\r\n        window.history.back();\r\n    }\r\n\r\n\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/settings/settings.component.ts"],"names":[],"mappings":"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","file":"app/settings/settings.component.js","sourcesContent":["import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\r\nimport { IAuthUser } from '../shared/auth/auth-user.model';\r\nimport { GridOptions } from 'ag-grid/main';\r\nimport { UserService } from './userlist/user-list.service';\r\nimport { UserProvide } from './userlist/user-list.provide';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { TranslatePipe, TranslateService, LangChangeEvent } from 'ng2-translate/ng2-translate';\r\n\r\nimport { DataFilterService } from '../railcars/common/services/filters-data/filter-data.service';\r\nimport { IDataModel } from '../railcars/common/services/filters-data/data.model';\r\nimport { USER_ROLES } from '../shared/auth/user-roles.model';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'wblg-settings',\r\n    templateUrl: './settings.component.html'\r\n    // styleUrls: ['./userlist/user-list.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit, OnChanges {\r\n    currentData: IAuthUser;\r\n    selectedButton: string;\r\n    isRowSelected: boolean;\r\n    dataSelectedRow: IAuthUser;\r\n    UserRoleList: string[];\r\n    modal: boolean;\r\n    public UsersList: IAuthUser[];\r\n    private OwnersData: any;\r\n    public message: string;\r\n    private columnDefs: any;\r\n    private gridOptions: GridOptions;\r\n    private _subTranslate: Subscription;\r\n\r\n    title_form: string;\r\n    title_button: string;\r\n\r\n    constructor(private userService: UserService, private _translate: TranslateService,\r\n        private _filters: DataFilterService) {\r\n        this.selectedButton = '';\r\n        this.currentData = <IAuthUser>{};\r\n        this.dataSelectedRow = <IAuthUser>{};\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createColunmDef();\r\n        this.createGridOptions();\r\n\r\n        this.OwnersData = { value: '', label: 'LABEL.COMPANY', data: [] };\r\n\r\n        this._filters.getOwnersList().subscribe(list => {\r\n            this.OwnersData.data = list;\r\n        });\r\n\r\n        this.OwnersData.data = USER_ROLES['public'];\r\n\r\n        this._subTranslate = this._translate.onLangChange.debounceTime(500).subscribe((event: LangChangeEvent) => {\r\n            if (this.gridOptions && this.gridOptions.api) { this.gridOptions.api.refreshHeader(); }\r\n        });\r\n\r\n        if (this.checkCondition('add')) {\r\n            this.currentData = <IAuthUser>{};\r\n        }\r\n\r\n        this.refreshData();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._subTranslate.unsubscribe();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.selectedButton === 'add')\r\n            this.currentData = <IAuthUser>{};\r\n        else {\r\n            if (this.dataSelectedRow)\r\n                this.currentData = this.dataSelectedRow;\r\n            if (this.selectedButton === 'delete' && this.dataSelectedRow) {\r\n                this.userService.deleteUser('' + this.dataSelectedRow.id);\r\n                console.log(\"User \" + this.dataSelectedRow.username + \" was deleted!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCondition(condition: string): boolean {\r\n        if (condition === this.selectedButton) return true;\r\n        else return false;\r\n    }\r\n\r\n    public refreshData(): void {\r\n        this.userService.getUserList()\r\n            .subscribe(res => {\r\n                this.UsersList = res;\r\n\r\n            },\r\n            err => {\r\n                this.UsersList = [];\r\n                this.message = 'Error get data:' + JSON.stringify(err);\r\n            });\r\n    }\r\n\r\n    private createColunmDef(): void {\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'LABEL.LOGIN',\r\n                field: 'login',\r\n                width: 200,\r\n                hidden: false\r\n            },\r\n            {\r\n                headerName: 'LABEL.FIRST_NAME',\r\n                field: 'firstName',\r\n                width: 150,\r\n                hidden: false\r\n            },\r\n            {\r\n                headerName: 'LABEL.LAST_NAME',\r\n                field: 'lastName',\r\n                width: 150,\r\n                hidden: false\r\n            },\r\n            {\r\n                headerName: 'LABEL.MIDDLE_NAME',\r\n                field: 'middleName',\r\n                width: 150,\r\n                hidden: false\r\n            },\r\n            {\r\n                headerName: 'E-mail',\r\n                field: 'email',\r\n                width: 200,\r\n                hidden: false\r\n            },\r\n            {\r\n                headerName: 'LABEL.NUMBER_CLIENTS',\r\n                field: 'clients',\r\n                width: 200,\r\n                hidden: false\r\n            }\r\n        ];\r\n    }\r\n\r\n    private createGridOptions(): void {\r\n        this.gridOptions = {\r\n            columnDefs: this.columnDefs,\r\n            rowData: this.UsersList,\r\n            rowSelection: 'single',\r\n            enableColResize: true,\r\n            headerCellRenderer: (params: any) => {\r\n                let txtGroup = document.getElementsByClassName('ag-header-group-text');\r\n                for (let i = 0; i < txtGroup.length; i++) {\r\n                    let element = txtGroup.item(i);\r\n                    let text = element.textContent;\r\n                    let txt = text;\r\n                    this._translate.get(text).subscribe((val) => {\r\n                        element.innerHTML = '';\r\n                        element.appendChild(document.createTextNode(val));\r\n\r\n                    });\r\n                }\r\n                return this.translateHeaderName(params);\r\n            },\r\n            onGridReady: () => {\r\n                this.gridOptions.api.sizeColumnsToFit();\r\n            },\r\n            forPrint: false,\r\n            suppressHorizontalScroll: true,\r\n            // getRowClass: (params: any) => {\r\n\r\n            //     return (params.node.data.type === '0' )? 'accepted-employeer ' : 'accepted-traider ';\r\n            // },\r\n            suppressMovableColumns: true,\r\n\r\n            enableSorting: true,\r\n            //  enableFilter: true,\r\n            headerHeight: 30,\r\n        };\r\n    }\r\n\r\n    onRowClicked(event: any) {\r\n        if (this.selectedButton === 'add')\r\n            this.currentData = <IAuthUser>{};\r\n        else    \r\n        console.log(event.data);\r\n        this.currentData = event.data;\r\n\r\n        this.dataSelectedRow = event.data;\r\n    }\r\n\r\n    onRowDoubleClicked() {\r\n        this.defineActiveButton('edit');\r\n    }\r\n\r\n    onFilterChanged(data: string) {\r\n        this.gridOptions.api.setQuickFilter(data);\r\n    }\r\n\r\n    private translateHeaderName(params: any): string {\r\n        let translate: string = params.colDef.headerName;\r\n        this._translate.get(params.colDef.headerName).subscribe((val) => {\r\n            translate = val;\r\n        });\r\n        return translate;\r\n    }\r\n\r\n    defineActiveButton(selectedObj: any) {\r\n        switch (selectedObj) {\r\n            case \"add\":\r\n                this.currentData = <IAuthUser>{};\r\n                this.title_form = 'TITLE.ADD_USER';\r\n                this.title_button = 'BUTTON.ADD_USER';\r\n                this.selectedButton = selectedObj;\r\n                this.modal = true;\r\n                break;\r\n            case \"edit\":\r\n                this.currentData = this.dataSelectedRow;\r\n                this.title_form = 'TITLE.EDIT_USER';\r\n                this.title_button = 'BUTTON.EDIT_USER';\r\n                this.selectedButton = selectedObj;\r\n                this.modal = true;\r\n                break;\r\n            case \"delete\":\r\n                this.currentData = this.dataSelectedRow;\r\n                this.title_form = 'TITLE.DELETE_USER';\r\n                this.title_button = 'BUTTON.DELETE_USER';\r\n                this.selectedButton = selectedObj;\r\n                this.modal = true;\r\n                break;\r\n            default:\r\n                this.selectedButton = '';\r\n                this.title_form = '';\r\n                break;\r\n        }\r\n    }\r\n\r\n    ok() {\r\n        if (this.selectedButton === 'add') {\r\n            this.userService.addUser(this.currentData);\r\n        }\r\n        if (this.selectedButton === 'edit') {\r\n            this.userService.updateUser(this.currentData);\r\n        }\r\n        if(this.selectedButton === 'delete') {\r\n            this.userService.deleteUser(this.currentData.id.toString());\r\n        }\r\n        this.selectedButton = '';\r\n        this.modal = false;\r\n    }\r\n\r\n    cancel() {\r\n        this.selectedButton = '';\r\n        this.modal = false;\r\n    }\r\n}"],"sourceRoot":"/source/"}